<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="950.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="933" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="933" > </text>
<g id="frames">
<g >
<title>start_thread (23 samples, 6.89%)</title><rect x="10.0" y="853" width="81.3" height="15.0" fill="rgb(221,40,51)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >start_thr..</text>
</g>
<g >
<title>__GI___select (8 samples, 2.40%)</title><rect x="635.3" y="757" width="28.3" height="15.0" fill="rgb(206,31,37)" rx="2" ry="2" />
<text  x="638.33" y="767.5" >_..</text>
</g>
<g >
<title>__libc_sendmsg (2 samples, 0.60%)</title><rect x="1122.9" y="725" width="7.0" height="15.0" fill="rgb(225,199,50)" rx="2" ry="2" />
<text  x="1125.87" y="735.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (17 samples, 5.09%)</title><rect x="31.2" y="533" width="60.1" height="15.0" fill="rgb(237,51,14)" rx="2" ry="2" />
<text  x="34.20" y="543.5" >intel_..</text>
</g>
<g >
<title>check_preempt_curr (1 samples, 0.30%)</title><rect x="797.8" y="469" width="3.6" height="15.0" fill="rgb(233,105,38)" rx="2" ry="2" />
<text  x="800.84" y="479.5" ></text>
</g>
<g >
<title>ddsi_plist_init_empty (1 samples, 0.30%)</title><rect x="737.8" y="725" width="3.5" height="15.0" fill="rgb(247,77,53)" rx="2" ry="2" />
<text  x="740.78" y="735.5" ></text>
</g>
<g >
<title>[[stack]] (2 samples, 0.60%)</title><rect x="172.5" y="869" width="7.1" height="15.0" fill="rgb(248,32,2)" rx="2" ry="2" />
<text  x="175.51" y="879.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="1101.7" y="757" width="3.5" height="15.0" fill="rgb(253,179,47)" rx="2" ry="2" />
<text  x="1104.68" y="767.5" ></text>
</g>
<g >
<title>visit_groups_merge (6 samples, 1.80%)</title><rect x="907.4" y="421" width="21.2" height="15.0" fill="rgb(209,109,25)" rx="2" ry="2" />
<text  x="910.37" y="431.5" ></text>
</g>
<g >
<title>native_write_msr (29 samples, 8.68%)</title><rect x="306.8" y="517" width="102.4" height="15.0" fill="rgb(218,187,38)" rx="2" ry="2" />
<text  x="309.77" y="527.5" >native_write..</text>
</g>
<g >
<title>update_sd_lb_stats (1 samples, 0.30%)</title><rect x="660.1" y="501" width="3.5" height="15.0" fill="rgb(214,65,53)" rx="2" ry="2" />
<text  x="663.06" y="511.5" ></text>
</g>
<g >
<title>dds_set_guardcondition (2 samples, 0.60%)</title><rect x="494.0" y="725" width="7.1" height="15.0" fill="rgb(217,71,0)" rx="2" ry="2" />
<text  x="497.01" y="735.5" ></text>
</g>
<g >
<title>dds_entity_pin (1 samples, 0.30%)</title><rect x="458.7" y="789" width="3.5" height="15.0" fill="rgb(247,108,24)" rx="2" ry="2" />
<text  x="461.68" y="799.5" ></text>
</g>
<g >
<title>ip_send_skb (1 samples, 0.30%)</title><rect x="1186.5" y="469" width="3.5" height="15.0" fill="rgb(220,84,3)" rx="2" ry="2" />
<text  x="1189.47" y="479.5" ></text>
</g>
<g >
<title>__sys_sendmsg (2 samples, 0.60%)</title><rect x="1122.9" y="645" width="7.0" height="15.0" fill="rgb(249,131,36)" rx="2" ry="2" />
<text  x="1125.87" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_sendmsg (2 samples, 0.60%)</title><rect x="1122.9" y="661" width="7.0" height="15.0" fill="rgb(244,103,39)" rx="2" ry="2" />
<text  x="1125.87" y="671.5" ></text>
</g>
<g >
<title>__sched_text_start (42 samples, 12.57%)</title><rect x="264.4" y="613" width="148.4" height="15.0" fill="rgb(232,114,3)" rx="2" ry="2" />
<text  x="267.37" y="623.5" >__sched_text_start</text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.30%)</title><rect x="462.2" y="773" width="3.5" height="15.0" fill="rgb(232,178,17)" rx="2" ry="2" />
<text  x="465.22" y="783.5" ></text>
</g>
<g >
<title>do_futex (12 samples, 3.59%)</title><rect x="766.0" y="565" width="42.4" height="15.0" fill="rgb(212,178,34)" rx="2" ry="2" />
<text  x="769.05" y="575.5" >do_..</text>
</g>
<g >
<title>futex_wake (11 samples, 3.29%)</title><rect x="766.0" y="549" width="38.9" height="15.0" fill="rgb(245,116,27)" rx="2" ry="2" />
<text  x="769.05" y="559.5" >fut..</text>
</g>
<g >
<title>[librclcpp.so] (1 samples, 0.30%)</title><rect x="479.9" y="773" width="3.5" height="15.0" fill="rgb(222,104,35)" rx="2" ry="2" />
<text  x="482.88" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.90%)</title><rect x="416.3" y="757" width="10.6" height="15.0" fill="rgb(221,166,38)" rx="2" ry="2" />
<text  x="419.29" y="767.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (8 samples, 2.40%)</title><rect x="91.3" y="757" width="28.2" height="15.0" fill="rgb(217,8,7)" rx="2" ry="2" />
<text  x="94.26" y="767.5" >_..</text>
</g>
<g >
<title>entidx_lookup_proxy_participant_guid (1 samples, 0.30%)</title><rect x="17.1" y="757" width="3.5" height="15.0" fill="rgb(230,5,41)" rx="2" ry="2" />
<text  x="20.07" y="767.5" ></text>
</g>
<g >
<title>__pthread_cond_broadcast (14 samples, 4.19%)</title><rect x="762.5" y="645" width="49.5" height="15.0" fill="rgb(233,45,21)" rx="2" ry="2" />
<text  x="765.51" y="655.5" >__pt..</text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.30%)</title><rect x="1122.9" y="597" width="3.5" height="15.0" fill="rgb(223,84,49)" rx="2" ry="2" />
<text  x="1125.87" y="607.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.30%)</title><rect x="1098.1" y="773" width="3.6" height="15.0" fill="rgb(225,183,18)" rx="2" ry="2" />
<text  x="1101.14" y="783.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.60%)</title><rect x="1059.3" y="517" width="7.0" height="15.0" fill="rgb(232,141,6)" rx="2" ry="2" />
<text  x="1062.28" y="527.5" ></text>
</g>
<g >
<title>__pthread_cond_wait (1 samples, 0.30%)</title><rect x="154.9" y="853" width="3.5" height="15.0" fill="rgb(234,164,54)" rx="2" ry="2" />
<text  x="157.85" y="863.5" ></text>
</g>
<g >
<title>inet_sendmsg (2 samples, 0.60%)</title><rect x="1182.9" y="517" width="7.1" height="15.0" fill="rgb(234,173,39)" rx="2" ry="2" />
<text  x="1185.93" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 2.40%)</title><rect x="91.3" y="709" width="28.2" height="15.0" fill="rgb(217,147,19)" rx="2" ry="2" />
<text  x="94.26" y="719.5" >d..</text>
</g>
<g >
<title>do_futex (1 samples, 0.30%)</title><rect x="808.4" y="581" width="3.6" height="15.0" fill="rgb(219,106,46)" rx="2" ry="2" />
<text  x="811.44" y="591.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (30 samples, 8.98%)</title><rect x="932.1" y="421" width="106.0" height="15.0" fill="rgb(224,164,27)" rx="2" ry="2" />
<text  x="935.10" y="431.5" >intel_pmu_en..</text>
</g>
<g >
<title>__pthread_cond_wait (43 samples, 12.87%)</title><rect x="264.4" y="773" width="151.9" height="15.0" fill="rgb(239,52,10)" rx="2" ry="2" />
<text  x="267.37" y="783.5" >__pthread_cond_wait</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.30%)</title><rect x="660.1" y="453" width="3.5" height="15.0" fill="rgb(206,163,21)" rx="2" ry="2" />
<text  x="663.06" y="463.5" ></text>
</g>
<g >
<title>ddsi_xqos_init_empty (1 samples, 0.30%)</title><rect x="741.3" y="725" width="3.6" height="15.0" fill="rgb(235,20,46)" rx="2" ry="2" />
<text  x="744.32" y="735.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.30%)</title><rect x="419.8" y="677" width="3.6" height="15.0" fill="rgb(211,159,15)" rx="2" ry="2" />
<text  x="422.82" y="687.5" ></text>
</g>
<g >
<title>ddsrt_cond_broadcast (14 samples, 4.19%)</title><rect x="762.5" y="661" width="49.5" height="15.0" fill="rgb(222,65,51)" rx="2" ry="2" />
<text  x="765.51" y="671.5" >ddsr..</text>
</g>
<g >
<title>do_syscall_64 (19 samples, 5.69%)</title><rect x="24.1" y="709" width="67.2" height="15.0" fill="rgb(254,99,12)" rx="2" ry="2" />
<text  x="27.13" y="719.5" >do_sysc..</text>
</g>
<g >
<title>ddsrt_select (8 samples, 2.40%)</title><rect x="635.3" y="773" width="28.3" height="15.0" fill="rgb(211,37,29)" rx="2" ry="2" />
<text  x="638.33" y="783.5" >d..</text>
</g>
<g >
<title>nn_fragchain_unref (1 samples, 0.30%)</title><rect x="822.6" y="741" width="3.5" height="15.0" fill="rgb(221,114,4)" rx="2" ry="2" />
<text  x="825.57" y="751.5" ></text>
</g>
<g >
<title>udp_sendmsg (1 samples, 0.30%)</title><rect x="1122.9" y="565" width="3.5" height="15.0" fill="rgb(248,41,34)" rx="2" ry="2" />
<text  x="1125.87" y="575.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1 samples, 0.30%)</title><rect x="1186.5" y="181" width="3.5" height="15.0" fill="rgb(206,93,29)" rx="2" ry="2" />
<text  x="1189.47" y="191.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="631.8" y="773" width="3.5" height="15.0" fill="rgb(209,145,38)" rx="2" ry="2" />
<text  x="634.80" y="783.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;,  (5 samples, 1.50%)</title><rect x="525.8" y="581" width="17.7" height="15.0" fill="rgb(245,37,0)" rx="2" ry="2" />
<text  x="528.81" y="591.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.30%)</title><rect x="1119.3" y="661" width="3.6" height="15.0" fill="rgb(208,33,33)" rx="2" ry="2" />
<text  x="1122.34" y="671.5" ></text>
</g>
<g >
<title>udp_recvmsg (58 samples, 17.37%)</title><rect x="861.4" y="581" width="204.9" height="15.0" fill="rgb(219,42,21)" rx="2" ry="2" />
<text  x="864.44" y="591.5" >udp_recvmsg</text>
</g>
<g >
<title>__sys_recvmsg (66 samples, 19.76%)</title><rect x="840.2" y="661" width="233.2" height="15.0" fill="rgb(209,202,29)" rx="2" ry="2" />
<text  x="843.24" y="671.5" >__sys_recvmsg</text>
</g>
<g >
<title>ddsi_plist_init_frommsg (1 samples, 0.30%)</title><rect x="10.0" y="757" width="3.5" height="15.0" fill="rgb(236,24,12)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.30%)</title><rect x="660.1" y="437" width="3.5" height="15.0" fill="rgb(206,154,28)" rx="2" ry="2" />
<text  x="663.06" y="447.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::add_handles_to_wait_set (3 samples, 0.90%)</title><rect x="578.8" y="741" width="10.6" height="15.0" fill="rgb(207,161,45)" rx="2" ry="2" />
<text  x="581.80" y="751.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.30%)</title><rect x="158.4" y="853" width="3.5" height="15.0" fill="rgb(247,213,7)" rx="2" ry="2" />
<text  x="161.38" y="863.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="458.7" y="773" width="3.5" height="15.0" fill="rgb(234,177,49)" rx="2" ry="2" />
<text  x="461.68" y="783.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.30%)</title><rect x="1066.3" y="613" width="3.6" height="15.0" fill="rgb(249,80,10)" rx="2" ry="2" />
<text  x="1069.35" y="623.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt; &gt;::shared_ptr&lt;void&gt; (1 samples, 0.30%)</title><rect x="550.5" y="693" width="3.6" height="15.0" fill="rgb(248,186,24)" rx="2" ry="2" />
<text  x="553.54" y="703.5" ></text>
</g>
<g >
<title>finish_task_switch (42 samples, 12.57%)</title><rect x="893.2" y="485" width="148.4" height="15.0" fill="rgb(235,121,40)" rx="2" ry="2" />
<text  x="896.23" y="495.5" >finish_task_switch</text>
</g>
<g >
<title>skb_consume_udp (3 samples, 0.90%)</title><rect x="1055.7" y="565" width="10.6" height="15.0" fill="rgb(242,81,11)" rx="2" ry="2" />
<text  x="1058.75" y="575.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (7 samples, 2.10%)</title><rect x="638.9" y="629" width="24.7" height="15.0" fill="rgb(237,108,12)" rx="2" ry="2" />
<text  x="641.86" y="639.5" >s..</text>
</g>
<g >
<title>__libc_sendmsg (2 samples, 0.60%)</title><rect x="1182.9" y="661" width="7.1" height="15.0" fill="rgb(219,169,41)" rx="2" ry="2" />
<text  x="1185.93" y="671.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.30%)</title><rect x="660.1" y="517" width="3.5" height="15.0" fill="rgb(224,188,52)" rx="2" ry="2" />
<text  x="663.06" y="527.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.30%)</title><rect x="1126.4" y="613" width="3.5" height="15.0" fill="rgb(236,86,44)" rx="2" ry="2" />
<text  x="1129.41" y="623.5" ></text>
</g>
<g >
<title>nn_reorder_nackmap (1 samples, 0.30%)</title><rect x="829.6" y="709" width="3.6" height="15.0" fill="rgb(237,92,1)" rx="2" ry="2" />
<text  x="832.64" y="719.5" ></text>
</g>
<g >
<title>schedule (7 samples, 2.10%)</title><rect x="638.9" y="597" width="24.7" height="15.0" fill="rgb(218,28,52)" rx="2" ry="2" />
<text  x="641.86" y="607.5" >s..</text>
</g>
<g >
<title>rcl_take (10 samples, 2.99%)</title><rect x="179.6" y="821" width="35.3" height="15.0" fill="rgb(227,188,37)" rx="2" ry="2" />
<text  x="182.58" y="831.5" >rc..</text>
</g>
<g >
<title>write_pmd_message (2 samples, 0.60%)</title><rect x="1182.9" y="789" width="7.1" height="15.0" fill="rgb(213,45,47)" rx="2" ry="2" />
<text  x="1185.93" y="799.5" ></text>
</g>
<g >
<title>ddsrt_chh_lookup (1 samples, 0.30%)</title><rect x="681.3" y="853" width="3.5" height="15.0" fill="rgb(205,100,0)" rx="2" ry="2" />
<text  x="684.26" y="863.5" ></text>
</g>
<g >
<title>recv_thread (9 samples, 2.69%)</title><rect x="631.8" y="805" width="31.8" height="15.0" fill="rgb(254,209,5)" rx="2" ry="2" />
<text  x="634.80" y="815.5" >re..</text>
</g>
<g >
<title>ddsrt_thread_self (1 samples, 0.30%)</title><rect x="1087.5" y="725" width="3.6" height="15.0" fill="rgb(221,171,45)" rx="2" ry="2" />
<text  x="1090.54" y="735.5" ></text>
</g>
<g >
<title>ipv4_pktinfo_prepare (1 samples, 0.30%)</title><rect x="1186.5" y="85" width="3.5" height="15.0" fill="rgb(208,25,46)" rx="2" ry="2" />
<text  x="1189.47" y="95.5" ></text>
</g>
<g >
<title>rclcpp::Executor::execute_subscription (19 samples, 5.69%)</title><rect x="501.1" y="757" width="67.1" height="15.0" fill="rgb(205,60,41)" rx="2" ry="2" />
<text  x="504.08" y="767.5" >rclcpp:..</text>
</g>
<g >
<title>entidx_lookup_guid_untyped (1 samples, 0.30%)</title><rect x="17.1" y="741" width="3.5" height="15.0" fill="rgb(209,127,34)" rx="2" ry="2" />
<text  x="20.07" y="751.5" ></text>
</g>
<g >
<title>ddsrt_cond_wait (20 samples, 5.99%)</title><rect x="20.6" y="789" width="70.7" height="15.0" fill="rgb(210,66,35)" rx="2" ry="2" />
<text  x="23.60" y="799.5" >ddsrt_c..</text>
</g>
<g >
<title>dds_get_status_changes (8 samples, 2.40%)</title><rect x="430.4" y="821" width="28.3" height="15.0" fill="rgb(210,187,46)" rx="2" ry="2" />
<text  x="433.42" y="831.5" >d..</text>
</g>
<g >
<title>dst_release (1 samples, 0.30%)</title><rect x="1186.5" y="69" width="3.5" height="15.0" fill="rgb(243,206,51)" rx="2" ry="2" />
<text  x="1189.47" y="79.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (1 samples, 0.30%)</title><rect x="1186.5" y="357" width="3.5" height="15.0" fill="rgb(227,209,28)" rx="2" ry="2" />
<text  x="1189.47" y="367.5" ></text>
</g>
<g >
<title>ddsrt_time_elapsed (1 samples, 0.30%)</title><rect x="13.5" y="773" width="3.6" height="15.0" fill="rgb(245,226,26)" rx="2" ry="2" />
<text  x="16.53" y="783.5" ></text>
</g>
<g >
<title>[librcl.so] (1 samples, 0.30%)</title><rect x="490.5" y="741" width="3.5" height="15.0" fill="rgb(241,12,5)" rx="2" ry="2" />
<text  x="493.48" y="751.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (2 samples, 0.60%)</title><rect x="1182.9" y="757" width="7.1" height="15.0" fill="rgb(208,52,16)" rx="2" ry="2" />
<text  x="1185.93" y="767.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.30%)</title><rect x="547.0" y="661" width="3.5" height="15.0" fill="rgb(219,131,54)" rx="2" ry="2" />
<text  x="550.01" y="671.5" ></text>
</g>
<g >
<title>___sys_sendmsg (2 samples, 0.60%)</title><rect x="1182.9" y="565" width="7.1" height="15.0" fill="rgb(226,219,52)" rx="2" ry="2" />
<text  x="1185.93" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (1 samples, 0.30%)</title><rect x="550.5" y="613" width="3.6" height="15.0" fill="rgb(239,145,14)" rx="2" ry="2" />
<text  x="553.54" y="623.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.30%)</title><rect x="1186.5" y="421" width="3.5" height="15.0" fill="rgb(205,117,3)" rx="2" ry="2" />
<text  x="1189.47" y="431.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (19 samples, 5.69%)</title><rect x="24.1" y="581" width="67.2" height="15.0" fill="rgb(209,146,38)" rx="2" ry="2" />
<text  x="27.13" y="591.5" >__perf_..</text>
</g>
<g >
<title>ddsrt_avl_find_min (1 samples, 0.30%)</title><rect x="826.1" y="757" width="3.5" height="15.0" fill="rgb(254,63,18)" rx="2" ry="2" />
<text  x="829.11" y="767.5" ></text>
</g>
<g >
<title>__skb_wait_for_more_packets (47 samples, 14.07%)</title><rect x="879.1" y="549" width="166.0" height="15.0" fill="rgb(241,228,17)" rx="2" ry="2" />
<text  x="882.10" y="559.5" >__skb_wait_for_more_p..</text>
</g>
<g >
<title>native_write_msr (1 samples, 0.30%)</title><rect x="628.3" y="661" width="3.5" height="15.0" fill="rgb(243,2,29)" rx="2" ry="2" />
<text  x="631.26" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 2.40%)</title><rect x="635.3" y="741" width="28.3" height="15.0" fill="rgb(209,57,8)" rx="2" ry="2" />
<text  x="638.33" y="751.5" >e..</text>
</g>
<g >
<title>perf_event_sched_in (1 samples, 0.30%)</title><rect x="1133.5" y="565" width="3.5" height="15.0" fill="rgb(248,26,25)" rx="2" ry="2" />
<text  x="1136.47" y="575.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (9 samples, 2.69%)</title><rect x="631.8" y="837" width="31.8" height="15.0" fill="rgb(251,91,21)" rx="2" ry="2" />
<text  x="634.80" y="847.5" >[l..</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.30%)</title><rect x="1186.5" y="213" width="3.5" height="15.0" fill="rgb(222,71,12)" rx="2" ry="2" />
<text  x="1189.47" y="223.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="829.6" y="725" width="3.6" height="15.0" fill="rgb(208,122,45)" rx="2" ry="2" />
<text  x="832.64" y="735.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::get_next_client (1 samples, 0.30%)</title><rect x="568.2" y="741" width="3.5" height="15.0" fill="rgb(246,6,5)" rx="2" ry="2" />
<text  x="571.20" y="751.5" ></text>
</g>
<g >
<title>____sys_sendmsg (2 samples, 0.60%)</title><rect x="1182.9" y="549" width="7.1" height="15.0" fill="rgb(241,106,29)" rx="2" ry="2" />
<text  x="1185.93" y="559.5" ></text>
</g>
<g >
<title>entidx_lookup_proxy_writer_guid (2 samples, 0.60%)</title><rect x="1105.2" y="773" width="7.1" height="15.0" fill="rgb(219,91,14)" rx="2" ry="2" />
<text  x="1108.21" y="783.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.30%)</title><rect x="426.9" y="821" width="3.5" height="15.0" fill="rgb(220,134,4)" rx="2" ry="2" />
<text  x="429.89" y="831.5" ></text>
</g>
<g >
<title>update_cfs_rq_h_load (1 samples, 0.30%)</title><rect x="783.7" y="485" width="3.5" height="15.0" fill="rgb(211,45,29)" rx="2" ry="2" />
<text  x="786.71" y="495.5" ></text>
</g>
<g >
<title>ddsrt_time_wallclock (1 samples, 0.30%)</title><rect x="1101.7" y="773" width="3.5" height="15.0" fill="rgb(229,35,29)" rx="2" ry="2" />
<text  x="1104.68" y="783.5" ></text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.30%)</title><rect x="1119.3" y="773" width="3.6" height="15.0" fill="rgb(252,49,15)" rx="2" ry="2" />
<text  x="1122.34" y="783.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategy::MemoryStrategy::get_subscription_by_handle (1 samples, 0.30%)</title><rect x="624.7" y="741" width="3.6" height="15.0" fill="rgb(241,64,10)" rx="2" ry="2" />
<text  x="627.73" y="751.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt; &gt;::shared_ptr&lt;std::allocator&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt; &gt;&gt; (1 samples, 0.30%)</title><rect x="561.1" y="693" width="3.6" height="15.0" fill="rgb(211,206,39)" rx="2" ry="2" />
<text  x="564.14" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (1 samples, 0.30%)</title><rect x="1119.3" y="837" width="3.6" height="15.0" fill="rgb(208,19,21)" rx="2" ry="2" />
<text  x="1122.34" y="847.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (3 samples, 0.90%)</title><rect x="1122.9" y="789" width="10.6" height="15.0" fill="rgb(244,0,40)" rx="2" ry="2" />
<text  x="1125.87" y="799.5" ></text>
</g>
<g >
<title>do_futex (2 samples, 0.60%)</title><rect x="416.3" y="709" width="7.1" height="15.0" fill="rgb(248,190,37)" rx="2" ry="2" />
<text  x="419.29" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 4.19%)</title><rect x="1133.5" y="709" width="49.4" height="15.0" fill="rgb(224,109,12)" rx="2" ry="2" />
<text  x="1136.47" y="719.5" >do_s..</text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.30%)</title><rect x="211.4" y="645" width="3.5" height="15.0" fill="rgb(238,197,53)" rx="2" ry="2" />
<text  x="214.38" y="655.5" ></text>
</g>
<g >
<title>udp_unicast_rcv_skb.isra.0 (1 samples, 0.30%)</title><rect x="1186.5" y="133" width="3.5" height="15.0" fill="rgb(205,68,52)" rx="2" ry="2" />
<text  x="1189.47" y="143.5" ></text>
</g>
<g >
<title>sock_recvmsg (59 samples, 17.66%)</title><rect x="857.9" y="613" width="208.4" height="15.0" fill="rgb(205,88,35)" rx="2" ry="2" />
<text  x="860.90" y="623.5" >sock_recvmsg</text>
</g>
<g >
<title>event_sched_in.isra.0 (1 samples, 0.30%)</title><rect x="914.4" y="373" width="3.6" height="15.0" fill="rgb(214,211,20)" rx="2" ry="2" />
<text  x="917.43" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_futex (14 samples, 4.19%)</title><rect x="1133.5" y="693" width="49.4" height="15.0" fill="rgb(244,96,15)" rx="2" ry="2" />
<text  x="1136.47" y="703.5" >__x6..</text>
</g>
<g >
<title>perf_event_sched_in (1 samples, 0.30%)</title><rect x="1119.3" y="613" width="3.6" height="15.0" fill="rgb(208,187,33)" rx="2" ry="2" />
<text  x="1122.34" y="623.5" ></text>
</g>
<g >
<title>update_nohz_stats (1 samples, 0.30%)</title><rect x="660.1" y="485" width="3.5" height="15.0" fill="rgb(207,15,52)" rx="2" ry="2" />
<text  x="663.06" y="495.5" ></text>
</g>
<g >
<title>rclcpp::message_memory_strategy::MessageMemoryStrategy&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::borrow_message (1 samples, 0.30%)</title><rect x="561.1" y="725" width="3.6" height="15.0" fill="rgb(250,151,37)" rx="2" ry="2" />
<text  x="564.14" y="735.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt; &gt;,  (1 samples, 0.30%)</title><rect x="564.7" y="725" width="3.5" height="15.0" fill="rgb(214,105,11)" rx="2" ry="2" />
<text  x="567.67" y="735.5" ></text>
</g>
<g >
<title>ddsrt_cond_waituntil (14 samples, 4.19%)</title><rect x="1133.5" y="789" width="49.4" height="15.0" fill="rgb(238,187,16)" rx="2" ry="2" />
<text  x="1136.47" y="799.5" >ddsr..</text>
</g>
<g >
<title>finish_task_switch (19 samples, 5.69%)</title><rect x="24.1" y="597" width="67.2" height="15.0" fill="rgb(242,104,24)" rx="2" ry="2" />
<text  x="27.13" y="607.5" >finish_..</text>
</g>
<g >
<title>rcl_trigger_guard_condition (5 samples, 1.50%)</title><rect x="483.4" y="757" width="17.7" height="15.0" fill="rgb(238,117,23)" rx="2" ry="2" />
<text  x="486.41" y="767.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (20 samples, 5.99%)</title><rect x="20.6" y="757" width="70.7" height="15.0" fill="rgb(214,210,6)" rx="2" ry="2" />
<text  x="23.60" y="767.5" >__pthre..</text>
</g>
<g >
<title>[libddsc.so.0.7.0] (9 samples, 2.69%)</title><rect x="631.8" y="821" width="31.8" height="15.0" fill="rgb(243,192,40)" rx="2" ry="2" />
<text  x="634.80" y="831.5" >[l..</text>
</g>
<g >
<title>udp_send_skb.isra.0 (1 samples, 0.30%)</title><rect x="1186.5" y="485" width="3.5" height="15.0" fill="rgb(251,11,2)" rx="2" ry="2" />
<text  x="1189.47" y="495.5" ></text>
</g>
<g >
<title>inet_sendmsg (1 samples, 0.30%)</title><rect x="1122.9" y="581" width="3.5" height="15.0" fill="rgb(205,199,44)" rx="2" ry="2" />
<text  x="1125.87" y="591.5" ></text>
</g>
<g >
<title>nn_freelist_pop (1 samples, 0.30%)</title><rect x="1129.9" y="741" width="3.6" height="15.0" fill="rgb(240,144,17)" rx="2" ry="2" />
<text  x="1132.94" y="751.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.30%)</title><rect x="865.0" y="565" width="3.5" height="15.0" fill="rgb(244,75,49)" rx="2" ry="2" />
<text  x="867.97" y="575.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.30%)</title><rect x="628.3" y="693" width="3.5" height="15.0" fill="rgb(222,141,33)" rx="2" ry="2" />
<text  x="631.26" y="703.5" ></text>
</g>
<g >
<title>std::allocator&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt; &gt;::~allocator (1 samples, 0.30%)</title><rect x="564.7" y="677" width="3.5" height="15.0" fill="rgb(250,225,10)" rx="2" ry="2" />
<text  x="567.67" y="687.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt; &gt;,  (1 samples, 0.30%)</title><rect x="561.1" y="645" width="3.6" height="15.0" fill="rgb(206,221,4)" rx="2" ry="2" />
<text  x="564.14" y="655.5" ></text>
</g>
<g >
<title>ddsrt_hh_lookup (1 samples, 0.30%)</title><rect x="815.5" y="693" width="3.5" height="15.0" fill="rgb(226,45,17)" rx="2" ry="2" />
<text  x="818.51" y="703.5" ></text>
</g>
<g >
<title>[librcl.so] (1 samples, 0.30%)</title><rect x="554.1" y="725" width="3.5" height="15.0" fill="rgb(206,4,38)" rx="2" ry="2" />
<text  x="557.07" y="735.5" ></text>
</g>
<g >
<title>schedule (14 samples, 4.19%)</title><rect x="1133.5" y="629" width="49.4" height="15.0" fill="rgb(216,87,53)" rx="2" ry="2" />
<text  x="1136.47" y="639.5" >sche..</text>
</g>
<g >
<title>enqueue_entity (2 samples, 0.60%)</title><rect x="787.2" y="453" width="7.1" height="15.0" fill="rgb(222,195,53)" rx="2" ry="2" />
<text  x="790.25" y="463.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (115 samples, 34.43%)</title><rect x="709.5" y="837" width="406.3" height="15.0" fill="rgb(212,226,8)" rx="2" ry="2" />
<text  x="712.52" y="847.5" >[libddsc.so.0.7.0]</text>
</g>
<g >
<title>ddsrt_cond_wait (43 samples, 12.87%)</title><rect x="264.4" y="789" width="151.9" height="15.0" fill="rgb(224,165,2)" rx="2" ry="2" />
<text  x="267.37" y="799.5" >ddsrt_cond_wait</text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.30%)</title><rect x="882.6" y="437" width="3.6" height="15.0" fill="rgb(247,174,42)" rx="2" ry="2" />
<text  x="885.63" y="447.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="1105.2" y="757" width="3.5" height="15.0" fill="rgb(254,20,12)" rx="2" ry="2" />
<text  x="1108.21" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (43 samples, 12.87%)</title><rect x="264.4" y="725" width="151.9" height="15.0" fill="rgb(240,4,52)" rx="2" ry="2" />
<text  x="267.37" y="735.5" >entry_SYSCALL_64_af..</text>
</g>
<g >
<title>start_thread (8 samples, 2.40%)</title><rect x="91.3" y="853" width="28.2" height="15.0" fill="rgb(229,26,23)" rx="2" ry="2" />
<text  x="94.26" y="863.5" >s..</text>
</g>
<g >
<title>event_sched_in.isra.0 (3 samples, 0.90%)</title><rect x="289.1" y="485" width="10.6" height="15.0" fill="rgb(225,181,47)" rx="2" ry="2" />
<text  x="292.10" y="495.5" ></text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.30%)</title><rect x="631.8" y="741" width="3.5" height="15.0" fill="rgb(246,100,49)" rx="2" ry="2" />
<text  x="634.80" y="751.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="829.6" y="693" width="3.6" height="15.0" fill="rgb(218,147,3)" rx="2" ry="2" />
<text  x="832.64" y="703.5" ></text>
</g>
<g >
<title>rclcpp::executors::SingleThreadedExecutor::spin (43 samples, 12.87%)</title><rect x="476.3" y="789" width="152.0" height="15.0" fill="rgb(240,104,25)" rx="2" ry="2" />
<text  x="479.35" y="799.5" >rclcpp::executors::..</text>
</g>
<g >
<title>rclcpp::SubscriptionBase::take_type_erased (10 samples, 2.99%)</title><rect x="179.6" y="837" width="35.3" height="15.0" fill="rgb(244,158,45)" rx="2" ry="2" />
<text  x="182.58" y="847.5" >rc..</text>
</g>
<g >
<title>do_futex (14 samples, 4.19%)</title><rect x="1133.5" y="677" width="49.4" height="15.0" fill="rgb(246,16,51)" rx="2" ry="2" />
<text  x="1136.47" y="687.5" >do_f..</text>
</g>
<g >
<title>task_ctx_sched_out (1 samples, 0.30%)</title><rect x="882.6" y="469" width="3.6" height="15.0" fill="rgb(225,153,9)" rx="2" ry="2" />
<text  x="885.63" y="479.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (1 samples, 0.30%)</title><rect x="628.3" y="709" width="3.5" height="15.0" fill="rgb(221,123,53)" rx="2" ry="2" />
<text  x="631.26" y="719.5" ></text>
</g>
<g >
<title>dds_entity_unlock (1 samples, 0.30%)</title><rect x="455.1" y="805" width="3.6" height="15.0" fill="rgb(213,168,3)" rx="2" ry="2" />
<text  x="458.15" y="815.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (115 samples, 34.43%)</title><rect x="709.5" y="821" width="406.3" height="15.0" fill="rgb(230,192,26)" rx="2" ry="2" />
<text  x="712.52" y="831.5" >[libddsc.so.0.7.0]</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.60%)</title><rect x="1182.9" y="629" width="7.1" height="15.0" fill="rgb(249,100,52)" rx="2" ry="2" />
<text  x="1185.93" y="639.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (1 samples, 0.30%)</title><rect x="1179.4" y="581" width="3.5" height="15.0" fill="rgb(229,161,49)" rx="2" ry="2" />
<text  x="1182.40" y="591.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (2 samples, 0.60%)</title><rect x="444.6" y="757" width="7.0" height="15.0" fill="rgb(205,9,33)" rx="2" ry="2" />
<text  x="447.55" y="767.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (8 samples, 2.40%)</title><rect x="91.3" y="581" width="28.2" height="15.0" fill="rgb(246,42,42)" rx="2" ry="2" />
<text  x="94.26" y="591.5" >_..</text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.30%)</title><rect x="1041.6" y="501" width="3.5" height="15.0" fill="rgb(220,222,25)" rx="2" ry="2" />
<text  x="1044.62" y="511.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.30%)</title><rect x="889.7" y="469" width="3.5" height="15.0" fill="rgb(211,103,20)" rx="2" ry="2" />
<text  x="892.70" y="479.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (2 samples, 0.60%)</title><rect x="589.4" y="741" width="7.1" height="15.0" fill="rgb(230,74,30)" rx="2" ry="2" />
<text  x="592.40" y="751.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::number_of_ready_events (1 samples, 0.30%)</title><rect x="596.5" y="741" width="3.5" height="15.0" fill="rgb(228,6,25)" rx="2" ry="2" />
<text  x="599.47" y="751.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.30%)</title><rect x="1186.5" y="277" width="3.5" height="15.0" fill="rgb(247,44,33)" rx="2" ry="2" />
<text  x="1189.47" y="287.5" ></text>
</g>
<g >
<title>x86_pmu_enable (17 samples, 5.09%)</title><rect x="31.2" y="549" width="60.1" height="15.0" fill="rgb(223,212,19)" rx="2" ry="2" />
<text  x="34.20" y="559.5" >x86_pm..</text>
</g>
<g >
<title>dds_entity_trigger_set (1 samples, 0.30%)</title><rect x="497.5" y="709" width="3.6" height="15.0" fill="rgb(211,124,22)" rx="2" ry="2" />
<text  x="500.54" y="719.5" ></text>
</g>
<g >
<title>start_thread (19 samples, 5.69%)</title><rect x="1122.9" y="853" width="67.1" height="15.0" fill="rgb(221,18,17)" rx="2" ry="2" />
<text  x="1125.87" y="863.5" >start_t..</text>
</g>
<g >
<title>schedule_timeout (1 samples, 0.30%)</title><rect x="1119.3" y="693" width="3.6" height="15.0" fill="rgb(215,132,4)" rx="2" ry="2" />
<text  x="1122.34" y="703.5" ></text>
</g>
<g >
<title>udp_queue_rcv_skb (1 samples, 0.30%)</title><rect x="1186.5" y="117" width="3.5" height="15.0" fill="rgb(222,40,39)" rx="2" ry="2" />
<text  x="1189.47" y="127.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (114 samples, 34.13%)</title><rect x="713.1" y="789" width="402.7" height="15.0" fill="rgb(246,124,45)" rx="2" ry="2" />
<text  x="716.05" y="799.5" >[libddsc.so.0.7.0]</text>
</g>
<g >
<title>[libddsc.so.0.7.0] (25 samples, 7.49%)</title><rect x="734.3" y="741" width="88.3" height="15.0" fill="rgb(242,30,51)" rx="2" ry="2" />
<text  x="737.25" y="751.5" >[libddsc.s..</text>
</g>
<g >
<title>__libc_sendmsg (2 samples, 0.60%)</title><rect x="1182.9" y="645" width="7.1" height="15.0" fill="rgb(248,28,38)" rx="2" ry="2" />
<text  x="1185.93" y="655.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.30%)</title><rect x="1126.4" y="629" width="3.5" height="15.0" fill="rgb(242,106,47)" rx="2" ry="2" />
<text  x="1129.41" y="639.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="1084.0" y="741" width="3.5" height="15.0" fill="rgb(216,213,17)" rx="2" ry="2" />
<text  x="1087.01" y="751.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.30%)</title><rect x="882.6" y="485" width="3.6" height="15.0" fill="rgb(243,140,50)" rx="2" ry="2" />
<text  x="885.63" y="495.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (6 samples, 1.80%)</title><rect x="638.9" y="549" width="21.2" height="15.0" fill="rgb(237,195,47)" rx="2" ry="2" />
<text  x="641.86" y="559.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.30%)</title><rect x="660.1" y="565" width="3.5" height="15.0" fill="rgb(231,206,10)" rx="2" ry="2" />
<text  x="663.06" y="575.5" ></text>
</g>
<g >
<title>perf_event_update_userpage (1 samples, 0.30%)</title><rect x="914.4" y="341" width="3.6" height="15.0" fill="rgb(205,143,16)" rx="2" ry="2" />
<text  x="917.43" y="351.5" ></text>
</g>
<g >
<title>__skb_wait_for_more_packets (1 samples, 0.30%)</title><rect x="1119.3" y="709" width="3.6" height="15.0" fill="rgb(226,204,12)" rx="2" ry="2" />
<text  x="1122.34" y="719.5" ></text>
</g>
<g >
<title>ddsrt_mutex_lock (1 samples, 0.30%)</title><rect x="462.2" y="789" width="3.5" height="15.0" fill="rgb(252,74,11)" rx="2" ry="2" />
<text  x="465.22" y="799.5" ></text>
</g>
<g >
<title>rclcpp::spin (43 samples, 12.87%)</title><rect x="476.3" y="805" width="152.0" height="15.0" fill="rgb(230,228,21)" rx="2" ry="2" />
<text  x="479.35" y="815.5" >rclcpp::spin</text>
</g>
<g >
<title>__x64_sys_select (8 samples, 2.40%)</title><rect x="635.3" y="709" width="28.3" height="15.0" fill="rgb(236,166,38)" rx="2" ry="2" />
<text  x="638.33" y="719.5" >_..</text>
</g>
<g >
<title>__perf_event_task_sched_in (41 samples, 12.28%)</title><rect x="893.2" y="469" width="144.9" height="15.0" fill="rgb(213,141,44)" rx="2" ry="2" />
<text  x="896.23" y="479.5" >__perf_event_task_..</text>
</g>
<g >
<title>rmw_trigger_guard_condition (2 samples, 0.60%)</title><rect x="494.0" y="741" width="7.1" height="15.0" fill="rgb(230,68,8)" rx="2" ry="2" />
<text  x="497.01" y="751.5" ></text>
</g>
<g >
<title>dds_entity_lock (6 samples, 1.80%)</title><rect x="434.0" y="805" width="21.1" height="15.0" fill="rgb(239,145,31)" rx="2" ry="2" />
<text  x="436.95" y="815.5" ></text>
</g>
<g >
<title>___sys_recvmsg (1 samples, 0.30%)</title><rect x="1119.3" y="805" width="3.6" height="15.0" fill="rgb(229,54,28)" rx="2" ry="2" />
<text  x="1122.34" y="815.5" ></text>
</g>
<g >
<title>deliver_locally_allinsync (22 samples, 6.59%)</title><rect x="744.9" y="725" width="77.7" height="15.0" fill="rgb(252,180,24)" rx="2" ry="2" />
<text  x="747.85" y="735.5" >deliver_..</text>
</g>
<g >
<title>ddsi_tkmap_find (1 samples, 0.30%)</title><rect x="812.0" y="693" width="3.5" height="15.0" fill="rgb(238,184,18)" rx="2" ry="2" />
<text  x="814.98" y="703.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (2 samples, 0.60%)</title><rect x="1122.9" y="757" width="7.0" height="15.0" fill="rgb(211,104,11)" rx="2" ry="2" />
<text  x="1125.87" y="767.5" ></text>
</g>
<g >
<title>visit_groups_merge (1 samples, 0.30%)</title><rect x="1133.5" y="533" width="3.5" height="15.0" fill="rgb(253,193,52)" rx="2" ry="2" />
<text  x="1136.47" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.60%)</title><rect x="702.5" y="869" width="7.0" height="15.0" fill="rgb(213,217,23)" rx="2" ry="2" />
<text  x="705.46" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (66 samples, 19.76%)</title><rect x="840.2" y="677" width="233.2" height="15.0" fill="rgb(232,12,18)" rx="2" ry="2" />
<text  x="843.24" y="687.5" >__x64_sys_recvmsg</text>
</g>
<g >
<title>[libddsc.so.0.7.0] (49 samples, 14.67%)</title><rect x="253.8" y="821" width="173.1" height="15.0" fill="rgb(215,205,2)" rx="2" ry="2" />
<text  x="256.77" y="831.5" >[libddsc.so.0.7.0]</text>
</g>
<g >
<title>__GI___clone (9 samples, 2.69%)</title><rect x="631.8" y="869" width="31.8" height="15.0" fill="rgb(232,147,9)" rx="2" ry="2" />
<text  x="634.80" y="879.5" >__..</text>
</g>
<g >
<title>rclcpp::MessageInfo::~MessageInfo (1 samples, 0.30%)</title><rect x="557.6" y="741" width="3.5" height="15.0" fill="rgb(209,98,38)" rx="2" ry="2" />
<text  x="560.60" y="751.5" ></text>
</g>
<g >
<title>____sys_recvmsg (1 samples, 0.30%)</title><rect x="631.8" y="629" width="3.5" height="15.0" fill="rgb(241,217,11)" rx="2" ry="2" />
<text  x="634.80" y="639.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (14 samples, 4.19%)</title><rect x="762.5" y="677" width="49.5" height="15.0" fill="rgb(232,29,47)" rx="2" ry="2" />
<text  x="765.51" y="687.5" >[lib..</text>
</g>
<g >
<title>rclcpp::Executor::wait_for_work (14 samples, 4.19%)</title><rect x="571.7" y="757" width="49.5" height="15.0" fill="rgb(237,137,33)" rx="2" ry="2" />
<text  x="574.74" y="767.5" >rclc..</text>
</g>
<g >
<title>finish_task_switch (8 samples, 2.40%)</title><rect x="91.3" y="597" width="28.2" height="15.0" fill="rgb(245,52,15)" rx="2" ry="2" />
<text  x="94.26" y="607.5" >f..</text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.30%)</title><rect x="660.1" y="469" width="3.5" height="15.0" fill="rgb(248,195,13)" rx="2" ry="2" />
<text  x="663.06" y="479.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.30%)</title><rect x="1186.5" y="453" width="3.5" height="15.0" fill="rgb(234,194,29)" rx="2" ry="2" />
<text  x="1189.47" y="463.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (109 samples, 32.63%)</title><rect x="713.1" y="773" width="385.0" height="15.0" fill="rgb(244,141,14)" rx="2" ry="2" />
<text  x="716.05" y="783.5" >[libddsc.so.0.7.0]</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.30%)</title><rect x="543.5" y="581" width="3.5" height="15.0" fill="rgb(230,58,33)" rx="2" ry="2" />
<text  x="546.47" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (1 samples, 0.30%)</title><rect x="547.0" y="629" width="3.5" height="15.0" fill="rgb(239,201,28)" rx="2" ry="2" />
<text  x="550.01" y="639.5" ></text>
</g>
<g >
<title>update_cfs_rq_h_load (1 samples, 0.30%)</title><rect x="801.4" y="501" width="3.5" height="15.0" fill="rgb(239,96,19)" rx="2" ry="2" />
<text  x="804.38" y="511.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (29 samples, 8.68%)</title><rect x="306.8" y="533" width="102.4" height="15.0" fill="rgb(213,38,21)" rx="2" ry="2" />
<text  x="309.77" y="543.5" >intel_pmu_en..</text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.30%)</title><rect x="631.8" y="661" width="3.5" height="15.0" fill="rgb(212,98,36)" rx="2" ry="2" />
<text  x="634.80" y="671.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="819.0" y="677" width="3.6" height="15.0" fill="rgb(253,64,10)" rx="2" ry="2" />
<text  x="822.04" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.60%)</title><rect x="1182.9" y="613" width="7.1" height="15.0" fill="rgb(217,86,28)" rx="2" ry="2" />
<text  x="1185.93" y="623.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (8 samples, 2.40%)</title><rect x="186.6" y="709" width="28.3" height="15.0" fill="rgb(242,201,17)" rx="2" ry="2" />
<text  x="189.65" y="719.5" >[..</text>
</g>
<g >
<title>ddsrt_mutex_lock (1 samples, 0.30%)</title><rect x="494.0" y="693" width="3.5" height="15.0" fill="rgb(212,18,35)" rx="2" ry="2" />
<text  x="497.01" y="703.5" ></text>
</g>
<g >
<title>native_write_msr (12 samples, 3.59%)</title><rect x="1137.0" y="517" width="42.4" height="15.0" fill="rgb(248,84,10)" rx="2" ry="2" />
<text  x="1140.01" y="527.5" >nat..</text>
</g>
<g >
<title>main (43 samples, 12.87%)</title><rect x="476.3" y="837" width="152.0" height="15.0" fill="rgb(253,62,50)" rx="2" ry="2" />
<text  x="479.35" y="847.5" >main</text>
</g>
<g >
<title>validate_msg_decoding (1 samples, 0.30%)</title><rect x="1112.3" y="773" width="3.5" height="15.0" fill="rgb(225,67,37)" rx="2" ry="2" />
<text  x="1115.28" y="783.5" ></text>
</g>
<g >
<title>wake_q_add_safe (1 samples, 0.30%)</title><rect x="776.6" y="533" width="3.6" height="15.0" fill="rgb(248,8,9)" rx="2" ry="2" />
<text  x="779.65" y="543.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.30%)</title><rect x="1186.5" y="389" width="3.5" height="15.0" fill="rgb(224,135,32)" rx="2" ry="2" />
<text  x="1189.47" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (68 samples, 20.36%)</title><rect x="836.7" y="693" width="240.2" height="15.0" fill="rgb(240,218,54)" rx="2" ry="2" />
<text  x="839.71" y="703.5" >do_syscall_64</text>
</g>
<g >
<title>inet_recvmsg (59 samples, 17.66%)</title><rect x="857.9" y="597" width="208.4" height="15.0" fill="rgb(227,16,0)" rx="2" ry="2" />
<text  x="860.90" y="607.5" >inet_recvmsg</text>
</g>
<g >
<title>kern_select (8 samples, 2.40%)</title><rect x="635.3" y="693" width="28.3" height="15.0" fill="rgb(208,174,24)" rx="2" ry="2" />
<text  x="638.33" y="703.5" >k..</text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.30%)</title><rect x="1119.3" y="821" width="3.6" height="15.0" fill="rgb(253,187,18)" rx="2" ry="2" />
<text  x="1122.34" y="831.5" ></text>
</g>
<g >
<title>ddsrt_mutex_unlock (1 samples, 0.30%)</title><rect x="819.0" y="693" width="3.6" height="15.0" fill="rgb(226,2,47)" rx="2" ry="2" />
<text  x="822.04" y="703.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_timer_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_timer_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_timer_t const&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;decltype (1 samples, 0.30%)</title><rect x="169.0" y="853" width="3.5" height="15.0" fill="rgb(215,43,31)" rx="2" ry="2" />
<text  x="171.98" y="863.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (1 samples, 0.30%)</title><rect x="797.8" y="485" width="3.6" height="15.0" fill="rgb(225,155,25)" rx="2" ry="2" />
<text  x="800.84" y="495.5" ></text>
</g>
<g >
<title>tev (19 samples, 5.69%)</title><rect x="1122.9" y="885" width="67.1" height="15.0" fill="rgb(212,146,14)" rx="2" ry="2" />
<text  x="1125.87" y="895.5" >tev</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.30%)</title><rect x="1186.5" y="245" width="3.5" height="15.0" fill="rgb(234,102,33)" rx="2" ry="2" />
<text  x="1189.47" y="255.5" ></text>
</g>
<g >
<title>__libc_start_main (43 samples, 12.87%)</title><rect x="476.3" y="853" width="152.0" height="15.0" fill="rgb(218,18,43)" rx="2" ry="2" />
<text  x="479.35" y="863.5" >__libc_start_main</text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.30%)</title><rect x="494.0" y="677" width="3.5" height="15.0" fill="rgb(211,47,27)" rx="2" ry="2" />
<text  x="497.01" y="687.5" ></text>
</g>
<g >
<title>ddsrt_mutex_unlock (3 samples, 0.90%)</title><rect x="416.3" y="805" width="10.6" height="15.0" fill="rgb(205,35,20)" rx="2" ry="2" />
<text  x="419.29" y="815.5" ></text>
</g>
<g >
<title>flexible_sched_in (5 samples, 1.50%)</title><rect x="289.1" y="517" width="17.7" height="15.0" fill="rgb(228,134,51)" rx="2" ry="2" />
<text  x="292.10" y="527.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="812.0" y="661" width="3.5" height="15.0" fill="rgb(243,205,39)" rx="2" ry="2" />
<text  x="814.98" y="671.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (19 samples, 5.69%)</title><rect x="1122.9" y="805" width="67.1" height="15.0" fill="rgb(251,14,36)" rx="2" ry="2" />
<text  x="1125.87" y="815.5" >[libdds..</text>
</g>
<g >
<title>ctx_sched_in (2 samples, 0.60%)</title><rect x="91.3" y="549" width="7.0" height="15.0" fill="rgb(239,67,1)" rx="2" ry="2" />
<text  x="94.26" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="628.3" y="869" width="3.5" height="15.0" fill="rgb(222,171,43)" rx="2" ry="2" />
<text  x="631.26" y="879.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.30%)</title><rect x="759.0" y="677" width="3.5" height="15.0" fill="rgb(237,70,38)" rx="2" ry="2" />
<text  x="761.98" y="687.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (5 samples, 1.50%)</title><rect x="197.2" y="677" width="17.7" height="15.0" fill="rgb(219,47,53)" rx="2" ry="2" />
<text  x="200.25" y="687.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::construct&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;&gt; (1 samples, 0.30%)</title><rect x="561.1" y="629" width="3.6" height="15.0" fill="rgb(232,135,37)" rx="2" ry="2" />
<text  x="564.14" y="639.5" ></text>
</g>
<g >
<title>perf_swevent_add (3 samples, 0.90%)</title><rect x="918.0" y="373" width="10.6" height="15.0" fill="rgb(248,21,45)" rx="2" ry="2" />
<text  x="920.96" y="383.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (2 samples, 0.60%)</title><rect x="444.6" y="773" width="7.0" height="15.0" fill="rgb(238,103,19)" rx="2" ry="2" />
<text  x="447.55" y="783.5" ></text>
</g>
<g >
<title>flexible_sched_in (4 samples, 1.20%)</title><rect x="914.4" y="405" width="14.2" height="15.0" fill="rgb(226,191,30)" rx="2" ry="2" />
<text  x="917.43" y="415.5" ></text>
</g>
<g >
<title>ddsrt_cond_waituntil (44 samples, 13.17%)</title><rect x="260.8" y="805" width="155.5" height="15.0" fill="rgb(243,41,35)" rx="2" ry="2" />
<text  x="263.84" y="815.5" >ddsrt_cond_waituntil</text>
</g>
<g >
<title>[[heap]] (1 samples, 0.30%)</title><rect x="681.3" y="869" width="3.5" height="15.0" fill="rgb(219,20,28)" rx="2" ry="2" />
<text  x="684.26" y="879.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.90%)</title><rect x="416.3" y="741" width="10.6" height="15.0" fill="rgb(211,19,30)" rx="2" ry="2" />
<text  x="419.29" y="751.5" ></text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.30%)</title><rect x="702.5" y="837" width="3.5" height="15.0" fill="rgb(244,177,36)" rx="2" ry="2" />
<text  x="705.46" y="847.5" ></text>
</g>
<g >
<title>ddsrt_chh_lookup (1 samples, 0.30%)</title><rect x="1108.7" y="741" width="3.6" height="15.0" fill="rgb(218,135,8)" rx="2" ry="2" />
<text  x="1111.74" y="751.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (8 samples, 2.40%)</title><rect x="91.3" y="805" width="28.2" height="15.0" fill="rgb(215,135,33)" rx="2" ry="2" />
<text  x="94.26" y="815.5" >[..</text>
</g>
<g >
<title>do_syscall_64 (43 samples, 12.87%)</title><rect x="264.4" y="709" width="151.9" height="15.0" fill="rgb(233,217,14)" rx="2" ry="2" />
<text  x="267.37" y="719.5" >do_syscall_64</text>
</g>
<g >
<title>perf_log_itrace_start (1 samples, 0.30%)</title><rect x="289.1" y="469" width="3.5" height="15.0" fill="rgb(219,16,16)" rx="2" ry="2" />
<text  x="292.10" y="479.5" ></text>
</g>
<g >
<title>perf_swevent_add (2 samples, 0.60%)</title><rect x="292.6" y="469" width="7.1" height="15.0" fill="rgb(224,92,21)" rx="2" ry="2" />
<text  x="295.63" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.30%)</title><rect x="550.5" y="645" width="3.6" height="15.0" fill="rgb(221,127,11)" rx="2" ry="2" />
<text  x="553.54" y="655.5" ></text>
</g>
<g >
<title>sched_acknack_if_needed (1 samples, 0.30%)</title><rect x="829.6" y="741" width="3.6" height="15.0" fill="rgb(229,206,17)" rx="2" ry="2" />
<text  x="832.64" y="751.5" ></text>
</g>
<g >
<title>rcutils_find_lastn (1 samples, 0.30%)</title><rect x="161.9" y="853" width="3.5" height="15.0" fill="rgb(215,115,44)" rx="2" ry="2" />
<text  x="164.92" y="863.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="10.0" y="773" width="3.5" height="15.0" fill="rgb(241,196,11)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (12 samples, 3.59%)</title><rect x="1137.0" y="533" width="42.4" height="15.0" fill="rgb(233,209,8)" rx="2" ry="2" />
<text  x="1140.01" y="543.5" >int..</text>
</g>
<g >
<title>copy_msghdr_from_user (1 samples, 0.30%)</title><rect x="1066.3" y="629" width="3.6" height="15.0" fill="rgb(215,108,27)" rx="2" ry="2" />
<text  x="1069.35" y="639.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt; &gt;,  (1 samples, 0.30%)</title><rect x="564.7" y="709" width="3.5" height="15.0" fill="rgb(252,150,52)" rx="2" ry="2" />
<text  x="567.67" y="719.5" ></text>
</g>
<g >
<title>udp_rcv (1 samples, 0.30%)</title><rect x="1186.5" y="165" width="3.5" height="15.0" fill="rgb(212,184,14)" rx="2" ry="2" />
<text  x="1189.47" y="175.5" ></text>
</g>
<g >
<title>x86_pmu_enable (6 samples, 1.80%)</title><rect x="638.9" y="517" width="21.2" height="15.0" fill="rgb(246,107,26)" rx="2" ry="2" />
<text  x="641.86" y="527.5" ></text>
</g>
<g >
<title>ctx_sched_in (6 samples, 1.80%)</title><rect x="907.4" y="437" width="21.2" height="15.0" fill="rgb(218,56,33)" rx="2" ry="2" />
<text  x="910.37" y="447.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (14 samples, 4.19%)</title><rect x="1133.5" y="645" width="49.4" height="15.0" fill="rgb(242,45,16)" rx="2" ry="2" />
<text  x="1136.47" y="655.5" >fute..</text>
</g>
<g >
<title>all (334 samples, 100%)</title><rect x="10.0" y="901" width="1180.0" height="15.0" fill="rgb(244,131,51)" rx="2" ry="2" />
<text  x="13.00" y="911.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (17 samples, 5.09%)</title><rect x="31.2" y="565" width="60.1" height="15.0" fill="rgb(229,112,24)" rx="2" ry="2" />
<text  x="34.20" y="575.5" >perf_p..</text>
</g>
<g >
<title>udp_queue_rcv_one_skb (1 samples, 0.30%)</title><rect x="1186.5" y="101" width="3.5" height="15.0" fill="rgb(252,90,23)" rx="2" ry="2" />
<text  x="1189.47" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 3.89%)</title><rect x="766.0" y="613" width="46.0" height="15.0" fill="rgb(218,19,39)" rx="2" ry="2" />
<text  x="769.05" y="623.5" >entr..</text>
</g>
<g >
<title>futex_wait_queue_me (42 samples, 12.57%)</title><rect x="264.4" y="645" width="148.4" height="15.0" fill="rgb(226,57,22)" rx="2" ry="2" />
<text  x="267.37" y="655.5" >futex_wait_queue_me</text>
</g>
<g >
<title>std::_Bind&lt;void  (11 samples, 3.29%)</title><rect x="508.1" y="645" width="38.9" height="15.0" fill="rgb(237,139,53)" rx="2" ry="2" />
<text  x="511.14" y="655.5" >std..</text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="628.3" y="837" width="3.5" height="15.0" fill="rgb(230,65,11)" rx="2" ry="2" />
<text  x="631.26" y="847.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.30%)</title><rect x="423.4" y="725" width="3.5" height="15.0" fill="rgb(221,8,44)" rx="2" ry="2" />
<text  x="426.35" y="735.5" ></text>
</g>
<g >
<title>__pthread_cond_wait (20 samples, 5.99%)</title><rect x="20.6" y="773" width="70.7" height="15.0" fill="rgb(222,201,28)" rx="2" ry="2" />
<text  x="23.60" y="783.5" >__pthre..</text>
</g>
<g >
<title>wake_up_q (1 samples, 0.30%)</title><rect x="1115.8" y="789" width="3.5" height="15.0" fill="rgb(246,139,14)" rx="2" ry="2" />
<text  x="1118.81" y="799.5" ></text>
</g>
<g >
<title>move_addr_to_user (1 samples, 0.30%)</title><rect x="854.4" y="613" width="3.5" height="15.0" fill="rgb(230,211,45)" rx="2" ry="2" />
<text  x="857.37" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_futex (12 samples, 3.59%)</title><rect x="766.0" y="581" width="42.4" height="15.0" fill="rgb(210,65,16)" rx="2" ry="2" />
<text  x="769.05" y="591.5" >__x..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt; &gt;::~new_allocator (1 samples, 0.30%)</title><rect x="564.7" y="661" width="3.5" height="15.0" fill="rgb(205,89,37)" rx="2" ry="2" />
<text  x="567.67" y="671.5" ></text>
</g>
<g >
<title>ctx_sched_out (1 samples, 0.30%)</title><rect x="882.6" y="453" width="3.6" height="15.0" fill="rgb(227,124,30)" rx="2" ry="2" />
<text  x="885.63" y="463.5" ></text>
</g>
<g >
<title>inet_recvmsg (1 samples, 0.30%)</title><rect x="850.8" y="613" width="3.6" height="15.0" fill="rgb(249,36,26)" rx="2" ry="2" />
<text  x="853.84" y="623.5" ></text>
</g>
<g >
<title>select_task_rq_fair (2 samples, 0.60%)</title><rect x="780.2" y="501" width="7.0" height="15.0" fill="rgb(253,197,17)" rx="2" ry="2" />
<text  x="783.18" y="511.5" ></text>
</g>
<g >
<title>core_sys_select (8 samples, 2.40%)</title><rect x="635.3" y="677" width="28.3" height="15.0" fill="rgb(221,29,33)" rx="2" ry="2" />
<text  x="638.33" y="687.5" >c..</text>
</g>
<g >
<title>listener (145 samples, 43.41%)</title><rect x="119.5" y="885" width="512.3" height="15.0" fill="rgb(212,190,30)" rx="2" ry="2" />
<text  x="122.52" y="895.5" >listener</text>
</g>
<g >
<title>__x64_sys_futex (8 samples, 2.40%)</title><rect x="91.3" y="693" width="28.2" height="15.0" fill="rgb(240,24,16)" rx="2" ry="2" />
<text  x="94.26" y="703.5" >_..</text>
</g>
<g >
<title>entidx_lookup_guid_untyped (1 samples, 0.30%)</title><rect x="1108.7" y="757" width="3.6" height="15.0" fill="rgb(209,206,39)" rx="2" ry="2" />
<text  x="1111.74" y="767.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.30%)</title><rect x="628.3" y="773" width="3.5" height="15.0" fill="rgb(247,126,19)" rx="2" ry="2" />
<text  x="631.26" y="783.5" ></text>
</g>
<g >
<title>nn_defrag_rsample (1 samples, 0.30%)</title><rect x="1087.5" y="757" width="3.6" height="15.0" fill="rgb(229,100,26)" rx="2" ry="2" />
<text  x="1090.54" y="767.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.30%)</title><rect x="1115.8" y="773" width="3.5" height="15.0" fill="rgb(217,221,29)" rx="2" ry="2" />
<text  x="1118.81" y="783.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::remove_null_handles (3 samples, 0.90%)</title><rect x="610.6" y="741" width="10.6" height="15.0" fill="rgb(229,156,19)" rx="2" ry="2" />
<text  x="613.60" y="751.5" ></text>
</g>
<g >
<title>schedule_timeout (46 samples, 13.77%)</title><rect x="882.6" y="533" width="162.5" height="15.0" fill="rgb(215,99,4)" rx="2" ry="2" />
<text  x="885.63" y="543.5" >schedule_timeout</text>
</g>
<g >
<title>futex_wait (14 samples, 4.19%)</title><rect x="1133.5" y="661" width="49.4" height="15.0" fill="rgb(207,186,15)" rx="2" ry="2" />
<text  x="1136.47" y="671.5" >fute..</text>
</g>
<g >
<title>[libddsc.so.0.7.0] (23 samples, 6.89%)</title><rect x="10.0" y="821" width="81.3" height="15.0" fill="rgb(216,146,34)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >[libddsc...</text>
</g>
<g >
<title>switch_fpu_return (1 samples, 0.30%)</title><rect x="412.8" y="693" width="3.5" height="15.0" fill="rgb(247,155,53)" rx="2" ry="2" />
<text  x="415.75" y="703.5" ></text>
</g>
<g >
<title>rcutils_logging_get_logger_effective_level (4 samples, 1.20%)</title><rect x="218.4" y="821" width="14.2" height="15.0" fill="rgb(243,154,16)" rx="2" ry="2" />
<text  x="221.44" y="831.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::allocator&lt;std::pair&lt;rmw_event_type_t const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_event_type_t&gt;, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::count (3 samples, 0.90%)</title><rect x="465.7" y="821" width="10.6" height="15.0" fill="rgb(246,20,16)" rx="2" ry="2" />
<text  x="468.75" y="831.5" ></text>
</g>
<g >
<title>x86_pmu_enable (6 samples, 1.80%)</title><rect x="98.3" y="549" width="21.2" height="15.0" fill="rgb(210,147,25)" rx="2" ry="2" />
<text  x="101.32" y="559.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.30%)</title><rect x="628.3" y="789" width="3.5" height="15.0" fill="rgb(212,31,54)" rx="2" ry="2" />
<text  x="631.26" y="799.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt; &gt;&gt; (1 samples, 0.30%)</title><rect x="561.1" y="709" width="3.6" height="15.0" fill="rgb(211,184,38)" rx="2" ry="2" />
<text  x="564.14" y="719.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.30%)</title><rect x="854.4" y="581" width="3.5" height="15.0" fill="rgb(231,172,23)" rx="2" ry="2" />
<text  x="857.37" y="591.5" ></text>
</g>
<g >
<title>nn_xmsg_new (1 samples, 0.30%)</title><rect x="1129.9" y="757" width="3.6" height="15.0" fill="rgb(206,130,6)" rx="2" ry="2" />
<text  x="1132.94" y="767.5" ></text>
</g>
<g >
<title>perf_swevent_add (2 samples, 0.60%)</title><rect x="299.7" y="485" width="7.1" height="15.0" fill="rgb(236,60,16)" rx="2" ry="2" />
<text  x="302.70" y="495.5" ></text>
</g>
<g >
<title>hash_futex (1 samples, 0.30%)</title><rect x="804.9" y="549" width="3.5" height="15.0" fill="rgb(205,98,50)" rx="2" ry="2" />
<text  x="807.91" y="559.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.30%)</title><rect x="1119.3" y="645" width="3.6" height="15.0" fill="rgb(232,192,12)" rx="2" ry="2" />
<text  x="1122.34" y="655.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.90%)</title><rect x="416.3" y="773" width="10.6" height="15.0" fill="rgb(207,6,54)" rx="2" ry="2" />
<text  x="419.29" y="783.5" ></text>
</g>
<g >
<title>native_write_msr (6 samples, 1.80%)</title><rect x="98.3" y="517" width="21.2" height="15.0" fill="rgb(231,143,0)" rx="2" ry="2" />
<text  x="101.32" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt; &gt;::construct&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;&gt; (1 samples, 0.30%)</title><rect x="561.1" y="613" width="3.6" height="15.0" fill="rgb(216,31,34)" rx="2" ry="2" />
<text  x="564.14" y="623.5" ></text>
</g>
<g >
<title>call_rcu (1 samples, 0.30%)</title><rect x="1186.5" y="53" width="3.5" height="15.0" fill="rgb(232,60,41)" rx="2" ry="2" />
<text  x="1189.47" y="63.5" ></text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.30%)</title><rect x="631.8" y="725" width="3.5" height="15.0" fill="rgb(239,39,35)" rx="2" ry="2" />
<text  x="634.80" y="735.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (6 samples, 1.80%)</title><rect x="638.9" y="533" width="21.2" height="15.0" fill="rgb(234,228,41)" rx="2" ry="2" />
<text  x="641.86" y="543.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.30%)</title><rect x="868.5" y="565" width="3.5" height="15.0" fill="rgb(211,40,8)" rx="2" ry="2" />
<text  x="871.50" y="575.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="1129.9" y="725" width="3.6" height="15.0" fill="rgb(205,84,27)" rx="2" ry="2" />
<text  x="1132.94" y="735.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (31 samples, 9.28%)</title><rect x="928.6" y="453" width="109.5" height="15.0" fill="rgb(208,28,23)" rx="2" ry="2" />
<text  x="931.56" y="463.5" >perf_pmu_enab..</text>
</g>
<g >
<title>futex_wait (1 samples, 0.30%)</title><rect x="628.3" y="805" width="3.5" height="15.0" fill="rgb(254,220,22)" rx="2" ry="2" />
<text  x="631.26" y="815.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.30%)</title><rect x="628.3" y="741" width="3.5" height="15.0" fill="rgb(249,143,44)" rx="2" ry="2" />
<text  x="631.26" y="751.5" ></text>
</g>
<g >
<title>futex_wake (13 samples, 3.89%)</title><rect x="766.0" y="629" width="46.0" height="15.0" fill="rgb(245,116,29)" rx="2" ry="2" />
<text  x="769.05" y="639.5" >fute..</text>
</g>
<g >
<title>pthread_self (1 samples, 0.30%)</title><rect x="706.0" y="853" width="3.5" height="15.0" fill="rgb(251,105,50)" rx="2" ry="2" />
<text  x="708.99" y="863.5" ></text>
</g>
<g >
<title>os_sockWaitsetWait (8 samples, 2.40%)</title><rect x="635.3" y="789" width="28.3" height="15.0" fill="rgb(221,135,46)" rx="2" ry="2" />
<text  x="638.33" y="799.5" >o..</text>
</g>
<g >
<title>start_thread (115 samples, 34.43%)</title><rect x="709.5" y="853" width="406.3" height="15.0" fill="rgb(208,183,3)" rx="2" ry="2" />
<text  x="712.52" y="863.5" >start_thread</text>
</g>
<g >
<title>__perf_event_task_sched_in (40 samples, 11.98%)</title><rect x="267.9" y="581" width="141.3" height="15.0" fill="rgb(250,79,42)" rx="2" ry="2" />
<text  x="270.90" y="591.5" >__perf_event_task..</text>
</g>
<g >
<title>__sched_text_start (7 samples, 2.10%)</title><rect x="638.9" y="581" width="24.7" height="15.0" fill="rgb(247,75,8)" rx="2" ry="2" />
<text  x="641.86" y="591.5" >_..</text>
</g>
<g >
<title>[libddsc.so.0.7.0] (23 samples, 6.89%)</title><rect x="10.0" y="837" width="81.3" height="15.0" fill="rgb(241,170,42)" rx="2" ry="2" />
<text  x="13.00" y="847.5" >[libddsc...</text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.30%)</title><rect x="1119.3" y="629" width="3.6" height="15.0" fill="rgb(240,222,25)" rx="2" ry="2" />
<text  x="1122.34" y="639.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (13 samples, 3.89%)</title><rect x="1133.5" y="581" width="45.9" height="15.0" fill="rgb(219,152,25)" rx="2" ry="2" />
<text  x="1136.47" y="591.5" >__pe..</text>
</g>
<g >
<title>[libddsc.so.0.7.0] (2 samples, 0.60%)</title><rect x="1182.9" y="773" width="7.1" height="15.0" fill="rgb(223,156,23)" rx="2" ry="2" />
<text  x="1185.93" y="783.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="260.8" y="789" width="3.6" height="15.0" fill="rgb(247,86,45)" rx="2" ry="2" />
<text  x="263.84" y="799.5" ></text>
</g>
<g >
<title>ddsrt_recvmsg (69 samples, 20.66%)</title><rect x="833.2" y="757" width="243.7" height="15.0" fill="rgb(221,46,27)" rx="2" ry="2" />
<text  x="836.17" y="767.5" >ddsrt_recvmsg</text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="815.5" y="677" width="3.5" height="15.0" fill="rgb(209,217,27)" rx="2" ry="2" />
<text  x="818.51" y="687.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (6 samples, 1.80%)</title><rect x="638.9" y="501" width="21.2" height="15.0" fill="rgb(219,225,2)" rx="2" ry="2" />
<text  x="641.86" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (68 samples, 20.36%)</title><rect x="836.7" y="709" width="240.2" height="15.0" fill="rgb(248,60,23)" rx="2" ry="2" />
<text  x="839.71" y="719.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>rcl_wait_set_is_valid (1 samples, 0.30%)</title><rect x="585.9" y="709" width="3.5" height="15.0" fill="rgb(224,102,5)" rx="2" ry="2" />
<text  x="588.87" y="719.5" ></text>
</g>
<g >
<title>futex_wait_cancelable (1 samples, 0.30%)</title><rect x="154.9" y="821" width="3.5" height="15.0" fill="rgb(246,9,39)" rx="2" ry="2" />
<text  x="157.85" y="831.5" ></text>
</g>
<g >
<title>_copy_to_iter (3 samples, 0.90%)</title><rect x="1045.1" y="565" width="10.6" height="15.0" fill="rgb(209,40,3)" rx="2" ry="2" />
<text  x="1048.15" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 3.89%)</title><rect x="766.0" y="597" width="46.0" height="15.0" fill="rgb(208,57,17)" rx="2" ry="2" />
<text  x="769.05" y="607.5" >do_s..</text>
</g>
<g >
<title>do_futex (1 samples, 0.30%)</title><rect x="1115.8" y="821" width="3.5" height="15.0" fill="rgb(241,205,9)" rx="2" ry="2" />
<text  x="1118.81" y="831.5" ></text>
</g>
<g >
<title>addrset_forall_count (2 samples, 0.60%)</title><rect x="1182.9" y="741" width="7.1" height="15.0" fill="rgb(210,89,48)" rx="2" ry="2" />
<text  x="1185.93" y="751.5" ></text>
</g>
<g >
<title>__libc_recvmsg (68 samples, 20.36%)</title><rect x="836.7" y="741" width="240.2" height="15.0" fill="rgb(228,191,2)" rx="2" ry="2" />
<text  x="839.71" y="751.5" >__libc_recvmsg</text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (1 samples, 0.30%)</title><rect x="550.5" y="629" width="3.6" height="15.0" fill="rgb(215,114,33)" rx="2" ry="2" />
<text  x="553.54" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 2.40%)</title><rect x="91.3" y="725" width="28.2" height="15.0" fill="rgb(213,217,38)" rx="2" ry="2" />
<text  x="94.26" y="735.5" >e..</text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.30%)</title><rect x="455.1" y="773" width="3.6" height="15.0" fill="rgb(213,54,48)" rx="2" ry="2" />
<text  x="458.15" y="783.5" ></text>
</g>
<g >
<title>futex_wait_cancelable (19 samples, 5.69%)</title><rect x="24.1" y="741" width="67.2" height="15.0" fill="rgb(239,84,54)" rx="2" ry="2" />
<text  x="27.13" y="751.5" >futex_w..</text>
</g>
<g >
<title>std::__shared_ptr&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;,  (1 samples, 0.30%)</title><rect x="561.1" y="677" width="3.6" height="15.0" fill="rgb(239,210,1)" rx="2" ry="2" />
<text  x="564.14" y="687.5" ></text>
</g>
<g >
<title>group_sched_in (4 samples, 1.20%)</title><rect x="914.4" y="389" width="14.2" height="15.0" fill="rgb(238,173,11)" rx="2" ry="2" />
<text  x="917.43" y="399.5" ></text>
</g>
<g >
<title>__GI___clone (115 samples, 34.43%)</title><rect x="709.5" y="869" width="406.3" height="15.0" fill="rgb(209,117,53)" rx="2" ry="2" />
<text  x="712.52" y="879.5" >__GI___clone</text>
</g>
<g >
<title>ddsrt_mutex_lock (1 samples, 0.30%)</title><rect x="497.5" y="677" width="3.6" height="15.0" fill="rgb(215,90,42)" rx="2" ry="2" />
<text  x="500.54" y="687.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="1087.5" y="741" width="3.6" height="15.0" fill="rgb(229,196,0)" rx="2" ry="2" />
<text  x="1090.54" y="751.5" ></text>
</g>
<g >
<title>____sys_recvmsg (1 samples, 0.30%)</title><rect x="1119.3" y="789" width="3.6" height="15.0" fill="rgb(251,170,38)" rx="2" ry="2" />
<text  x="1122.34" y="799.5" ></text>
</g>
<g >
<title>rclcpp::spin (43 samples, 12.87%)</title><rect x="476.3" y="821" width="152.0" height="15.0" fill="rgb(211,168,32)" rx="2" ry="2" />
<text  x="479.35" y="831.5" >rclcpp::spin</text>
</g>
<g >
<title>[libddsc.so.0.7.0] (5 samples, 1.50%)</title><rect x="684.8" y="853" width="17.7" height="15.0" fill="rgb(229,117,6)" rx="2" ry="2" />
<text  x="687.79" y="863.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="631.8" y="789" width="3.5" height="15.0" fill="rgb(211,213,16)" rx="2" ry="2" />
<text  x="634.80" y="799.5" ></text>
</g>
<g >
<title>native_write_msr (6 samples, 1.80%)</title><rect x="638.9" y="485" width="21.2" height="15.0" fill="rgb(213,49,28)" rx="2" ry="2" />
<text  x="641.86" y="495.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (11 samples, 3.29%)</title><rect x="508.1" y="629" width="38.9" height="15.0" fill="rgb(251,113,41)" rx="2" ry="2" />
<text  x="511.14" y="639.5" >std..</text>
</g>
<g >
<title>perf_event_sched_in (2 samples, 0.60%)</title><rect x="91.3" y="565" width="7.0" height="15.0" fill="rgb(243,7,31)" rx="2" ry="2" />
<text  x="94.26" y="575.5" ></text>
</g>
<g >
<title>dds_take_guardcondition (2 samples, 0.60%)</title><rect x="458.7" y="821" width="7.0" height="15.0" fill="rgb(206,112,35)" rx="2" ry="2" />
<text  x="461.68" y="831.5" ></text>
</g>
<g >
<title>__call_rcu (1 samples, 0.30%)</title><rect x="1186.5" y="37" width="3.5" height="15.0" fill="rgb(221,42,17)" rx="2" ry="2" />
<text  x="1189.47" y="47.5" ></text>
</g>
<g >
<title>rcutils_logging_get_logger_leveln (1 samples, 0.30%)</title><rect x="165.4" y="853" width="3.6" height="15.0" fill="rgb(250,168,5)" rx="2" ry="2" />
<text  x="168.45" y="863.5" ></text>
</g>
<g >
<title>ddsrt_recvmsg (1 samples, 0.30%)</title><rect x="631.8" y="757" width="3.5" height="15.0" fill="rgb(230,181,33)" rx="2" ry="2" />
<text  x="634.80" y="767.5" ></text>
</g>
<g >
<title>__libc_sendmsg (2 samples, 0.60%)</title><rect x="1122.9" y="709" width="7.0" height="15.0" fill="rgb(207,175,13)" rx="2" ry="2" />
<text  x="1125.87" y="719.5" ></text>
</g>
<g >
<title>futex_abstimed_wait_cancelable (14 samples, 4.19%)</title><rect x="1133.5" y="741" width="49.4" height="15.0" fill="rgb(248,185,29)" rx="2" ry="2" />
<text  x="1136.47" y="751.5" >fute..</text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.30%)</title><rect x="1073.4" y="677" width="3.5" height="15.0" fill="rgb(210,150,42)" rx="2" ry="2" />
<text  x="1076.41" y="687.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (8 samples, 2.40%)</title><rect x="91.3" y="645" width="28.2" height="15.0" fill="rgb(206,184,0)" rx="2" ry="2" />
<text  x="94.26" y="655.5" >f..</text>
</g>
<g >
<title>__sched_text_start (8 samples, 2.40%)</title><rect x="91.3" y="613" width="28.2" height="15.0" fill="rgb(230,117,6)" rx="2" ry="2" />
<text  x="94.26" y="623.5" >_..</text>
</g>
<g >
<title>ddsrt_sendmsg (2 samples, 0.60%)</title><rect x="1182.9" y="677" width="7.1" height="15.0" fill="rgb(207,69,20)" rx="2" ry="2" />
<text  x="1185.93" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.30%)</title><rect x="759.0" y="661" width="3.5" height="15.0" fill="rgb(234,139,41)" rx="2" ry="2" />
<text  x="761.98" y="671.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.30%)</title><rect x="1126.4" y="597" width="3.5" height="15.0" fill="rgb(219,5,50)" rx="2" ry="2" />
<text  x="1129.41" y="607.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.30%)</title><rect x="886.2" y="469" width="3.5" height="15.0" fill="rgb(210,137,19)" rx="2" ry="2" />
<text  x="889.17" y="479.5" ></text>
</g>
<g >
<title>enqueue_task_fair (2 samples, 0.60%)</title><rect x="787.2" y="469" width="7.1" height="15.0" fill="rgb(234,54,48)" rx="2" ry="2" />
<text  x="790.25" y="479.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.30%)</title><rect x="1186.5" y="293" width="3.5" height="15.0" fill="rgb(207,51,16)" rx="2" ry="2" />
<text  x="1189.47" y="303.5" ></text>
</g>
<g >
<title>ddsrt_cond_waituntil (8 samples, 2.40%)</title><rect x="91.3" y="789" width="28.2" height="15.0" fill="rgb(239,106,9)" rx="2" ry="2" />
<text  x="94.26" y="799.5" >d..</text>
</g>
<g >
<title>do_select (8 samples, 2.40%)</title><rect x="635.3" y="661" width="28.3" height="15.0" fill="rgb(219,22,50)" rx="2" ry="2" />
<text  x="638.33" y="671.5" >d..</text>
</g>
<g >
<title>fput_many (1 samples, 0.30%)</title><rect x="1069.9" y="645" width="3.5" height="15.0" fill="rgb(222,193,39)" rx="2" ry="2" />
<text  x="1072.88" y="655.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (19 samples, 5.69%)</title><rect x="1122.9" y="837" width="67.1" height="15.0" fill="rgb(216,184,38)" rx="2" ry="2" />
<text  x="1125.87" y="847.5" >[libdds..</text>
</g>
<g >
<title>native_write_msr (30 samples, 8.98%)</title><rect x="932.1" y="405" width="106.0" height="15.0" fill="rgb(223,170,35)" rx="2" ry="2" />
<text  x="935.10" y="415.5" >native_write..</text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="497.5" y="661" width="3.6" height="15.0" fill="rgb(219,155,19)" rx="2" ry="2" />
<text  x="500.54" y="671.5" ></text>
</g>
<g >
<title>___sys_recvmsg (1 samples, 0.30%)</title><rect x="631.8" y="645" width="3.5" height="15.0" fill="rgb(224,87,45)" rx="2" ry="2" />
<text  x="634.80" y="655.5" ></text>
</g>
<g >
<title>[librcl.so] (1 samples, 0.30%)</title><rect x="582.3" y="693" width="3.6" height="15.0" fill="rgb(237,208,26)" rx="2" ry="2" />
<text  x="585.34" y="703.5" ></text>
</g>
<g >
<title>finish_task_switch (6 samples, 1.80%)</title><rect x="638.9" y="565" width="21.2" height="15.0" fill="rgb(218,17,0)" rx="2" ry="2" />
<text  x="641.86" y="575.5" ></text>
</g>
<g >
<title>__get_user_4 (1 samples, 0.30%)</title><rect x="847.3" y="613" width="3.5" height="15.0" fill="rgb(210,80,26)" rx="2" ry="2" />
<text  x="850.31" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2 samples, 0.60%)</title><rect x="416.3" y="725" width="7.1" height="15.0" fill="rgb(252,83,0)" rx="2" ry="2" />
<text  x="419.29" y="735.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (19 samples, 5.69%)</title><rect x="1122.9" y="821" width="67.1" height="15.0" fill="rgb(240,156,13)" rx="2" ry="2" />
<text  x="1125.87" y="831.5" >[libdds..</text>
</g>
<g >
<title>poll_schedule_timeout.constprop.0 (7 samples, 2.10%)</title><rect x="638.9" y="645" width="24.7" height="15.0" fill="rgb(225,203,46)" rx="2" ry="2" />
<text  x="641.86" y="655.5" >p..</text>
</g>
<g >
<title>x86_pmu_enable (29 samples, 8.68%)</title><rect x="306.8" y="549" width="102.4" height="15.0" fill="rgb(233,221,29)" rx="2" ry="2" />
<text  x="309.77" y="559.5" >x86_pmu_enable</text>
</g>
<g >
<title>dds_take (10 samples, 2.99%)</title><rect x="179.6" y="789" width="35.3" height="15.0" fill="rgb(214,130,40)" rx="2" ry="2" />
<text  x="182.58" y="799.5" >dd..</text>
</g>
<g >
<title>__pthread_cond_wait_common (1 samples, 0.30%)</title><rect x="154.9" y="837" width="3.5" height="15.0" fill="rgb(243,163,50)" rx="2" ry="2" />
<text  x="157.85" y="847.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.30%)</title><rect x="1186.5" y="437" width="3.5" height="15.0" fill="rgb(245,147,0)" rx="2" ry="2" />
<text  x="1189.47" y="447.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (1 samples, 0.30%)</title><rect x="1115.8" y="741" width="3.5" height="15.0" fill="rgb(217,215,17)" rx="2" ry="2" />
<text  x="1118.81" y="751.5" ></text>
</g>
<g >
<title>visit_groups_merge (5 samples, 1.50%)</title><rect x="289.1" y="533" width="17.7" height="15.0" fill="rgb(222,148,8)" rx="2" ry="2" />
<text  x="292.10" y="543.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (6 samples, 1.80%)</title><rect x="193.7" y="693" width="21.2" height="15.0" fill="rgb(226,223,38)" rx="2" ry="2" />
<text  x="196.71" y="703.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.30%)</title><rect x="660.1" y="533" width="3.5" height="15.0" fill="rgb(228,123,32)" rx="2" ry="2" />
<text  x="663.06" y="543.5" ></text>
</g>
<g >
<title>ctx_sched_in (1 samples, 0.30%)</title><rect x="1119.3" y="597" width="3.6" height="15.0" fill="rgb(232,99,20)" rx="2" ry="2" />
<text  x="1122.34" y="607.5" ></text>
</g>
<g >
<title>rcl_subscription_can_loan_messages (1 samples, 0.30%)</title><rect x="554.1" y="741" width="3.5" height="15.0" fill="rgb(206,64,15)" rx="2" ry="2" />
<text  x="557.07" y="751.5" ></text>
</g>
<g >
<title>__condvar_acquire_lock (1 samples, 0.30%)</title><rect x="762.5" y="629" width="3.5" height="15.0" fill="rgb(242,135,51)" rx="2" ry="2" />
<text  x="765.51" y="639.5" ></text>
</g>
<g >
<title>perf_swevent_add (1 samples, 0.30%)</title><rect x="914.4" y="357" width="3.6" height="15.0" fill="rgb(239,199,46)" rx="2" ry="2" />
<text  x="917.43" y="367.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.30%)</title><rect x="1087.5" y="709" width="3.6" height="15.0" fill="rgb(217,192,53)" rx="2" ry="2" />
<text  x="1090.54" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 2.40%)</title><rect x="635.3" y="725" width="28.3" height="15.0" fill="rgb(225,4,27)" rx="2" ry="2" />
<text  x="638.33" y="735.5" >d..</text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.30%)</title><rect x="550.5" y="661" width="3.6" height="15.0" fill="rgb(241,49,41)" rx="2" ry="2" />
<text  x="553.54" y="671.5" ></text>
</g>
<g >
<title>finish_task_switch (42 samples, 12.57%)</title><rect x="264.4" y="597" width="148.4" height="15.0" fill="rgb(231,39,28)" rx="2" ry="2" />
<text  x="267.37" y="607.5" >finish_task_switch</text>
</g>
<g >
<title>sock_alloc_send_skb (1 samples, 0.30%)</title><rect x="1122.9" y="533" width="3.5" height="15.0" fill="rgb(253,132,35)" rx="2" ry="2" />
<text  x="1125.87" y="543.5" ></text>
</g>
<g >
<title>__skb_recv_udp (49 samples, 14.67%)</title><rect x="872.0" y="565" width="173.1" height="15.0" fill="rgb(212,110,31)" rx="2" ry="2" />
<text  x="875.04" y="575.5" >__skb_recv_udp</text>
</g>
<g >
<title>rclcpp::Subscription&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt;, rclcpp::message_memory_strategy::MessageMemoryStrategy&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;::handle_message (15 samples, 4.49%)</title><rect x="501.1" y="725" width="53.0" height="15.0" fill="rgb(222,225,22)" rx="2" ry="2" />
<text  x="504.08" y="735.5" >rclcp..</text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;,  (2 samples, 0.60%)</title><rect x="536.4" y="565" width="7.1" height="15.0" fill="rgb(224,1,0)" rx="2" ry="2" />
<text  x="539.41" y="575.5" ></text>
</g>
<g >
<title>do_futex (19 samples, 5.69%)</title><rect x="24.1" y="677" width="67.2" height="15.0" fill="rgb(209,8,31)" rx="2" ry="2" />
<text  x="27.13" y="687.5" >do_futex</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="631.8" y="709" width="3.5" height="15.0" fill="rgb(245,228,49)" rx="2" ry="2" />
<text  x="634.80" y="719.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (8 samples, 2.40%)</title><rect x="91.3" y="821" width="28.2" height="15.0" fill="rgb(221,160,20)" rx="2" ry="2" />
<text  x="94.26" y="831.5" >[..</text>
</g>
<g >
<title>futex_abstimed_wait_cancelable (8 samples, 2.40%)</title><rect x="91.3" y="741" width="28.2" height="15.0" fill="rgb(244,205,28)" rx="2" ry="2" />
<text  x="94.26" y="751.5" >f..</text>
</g>
<g >
<title>std::_Bind&lt;void  (11 samples, 3.29%)</title><rect x="508.1" y="661" width="38.9" height="15.0" fill="rgb(242,213,23)" rx="2" ry="2" />
<text  x="511.14" y="671.5" >std..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="631.8" y="693" width="3.5" height="15.0" fill="rgb(215,114,35)" rx="2" ry="2" />
<text  x="634.80" y="703.5" ></text>
</g>
<g >
<title>gc (8 samples, 2.40%)</title><rect x="91.3" y="885" width="28.2" height="15.0" fill="rgb(221,47,23)" rx="2" ry="2" />
<text  x="94.26" y="895.5" >gc</text>
</g>
<g >
<title>kfree_skbmem (2 samples, 0.60%)</title><rect x="1059.3" y="533" width="7.0" height="15.0" fill="rgb(240,196,10)" rx="2" ry="2" />
<text  x="1062.28" y="543.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 25.15%)</title><rect x="179.6" y="869" width="296.7" height="15.0" fill="rgb(245,210,26)" rx="2" ry="2" />
<text  x="182.58" y="879.5" >[unknown]</text>
</g>
<g >
<title>[libddsc.so.0.7.0] (22 samples, 6.59%)</title><rect x="744.9" y="709" width="77.7" height="15.0" fill="rgb(224,23,8)" rx="2" ry="2" />
<text  x="747.85" y="719.5" >[libddsc..</text>
</g>
<g >
<title>handle_pmd_message (1 samples, 0.30%)</title><rect x="17.1" y="773" width="3.5" height="15.0" fill="rgb(208,225,13)" rx="2" ry="2" />
<text  x="20.07" y="783.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.30%)</title><rect x="1115.8" y="757" width="3.5" height="15.0" fill="rgb(225,199,26)" rx="2" ry="2" />
<text  x="1118.81" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (1 samples, 0.30%)</title><rect x="547.0" y="613" width="3.5" height="15.0" fill="rgb(251,206,13)" rx="2" ry="2" />
<text  x="550.01" y="623.5" ></text>
</g>
<g >
<title>schedule (19 samples, 5.69%)</title><rect x="24.1" y="629" width="67.2" height="15.0" fill="rgb(216,9,11)" rx="2" ry="2" />
<text  x="27.13" y="639.5" >schedule</text>
</g>
<g >
<title>rcl_service_get_rmw_handle (1 samples, 0.30%)</title><rect x="582.3" y="709" width="3.6" height="15.0" fill="rgb(235,100,49)" rx="2" ry="2" />
<text  x="585.34" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_futex (19 samples, 5.69%)</title><rect x="24.1" y="693" width="67.2" height="15.0" fill="rgb(233,163,51)" rx="2" ry="2" />
<text  x="27.13" y="703.5" >__x64_s..</text>
</g>
<g >
<title>ddsrt_mutex_unlock (1 samples, 0.30%)</title><rect x="172.5" y="853" width="3.5" height="15.0" fill="rgb(212,202,10)" rx="2" ry="2" />
<text  x="175.51" y="863.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (10 samples, 2.99%)</title><rect x="179.6" y="773" width="35.3" height="15.0" fill="rgb(230,208,36)" rx="2" ry="2" />
<text  x="182.58" y="783.5" >[l..</text>
</g>
<g >
<title>[libddsc.so.0.7.0] (8 samples, 2.40%)</title><rect x="91.3" y="837" width="28.2" height="15.0" fill="rgb(244,44,47)" rx="2" ry="2" />
<text  x="94.26" y="847.5" >[..</text>
</g>
<g >
<title>visit_groups_merge (1 samples, 0.30%)</title><rect x="1119.3" y="581" width="3.6" height="15.0" fill="rgb(249,162,3)" rx="2" ry="2" />
<text  x="1122.34" y="591.5" ></text>
</g>
<g >
<title>__udp4_lib_rcv (1 samples, 0.30%)</title><rect x="1186.5" y="149" width="3.5" height="15.0" fill="rgb(227,212,47)" rx="2" ry="2" />
<text  x="1189.47" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.60%)</title><rect x="1115.8" y="869" width="7.1" height="15.0" fill="rgb(238,131,35)" rx="2" ry="2" />
<text  x="1118.81" y="879.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.30%)</title><rect x="755.4" y="645" width="3.6" height="15.0" fill="rgb(236,100,38)" rx="2" ry="2" />
<text  x="758.45" y="655.5" ></text>
</g>
<g >
<title>[anon] (5 samples, 1.50%)</title><rect x="684.8" y="869" width="17.7" height="15.0" fill="rgb(205,191,44)" rx="2" ry="2" />
<text  x="687.79" y="879.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.90%)</title><rect x="1045.1" y="549" width="10.6" height="15.0" fill="rgb(250,30,7)" rx="2" ry="2" />
<text  x="1048.15" y="559.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (1 samples, 0.30%)</title><rect x="419.8" y="661" width="3.6" height="15.0" fill="rgb(237,177,43)" rx="2" ry="2" />
<text  x="422.82" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_default_append (1 samples, 0.30%)</title><rect x="211.4" y="661" width="3.5" height="15.0" fill="rgb(234,202,12)" rx="2" ry="2" />
<text  x="214.38" y="671.5" ></text>
</g>
<g >
<title>nn_dqueue_wait_until_empty_if_full (2 samples, 0.60%)</title><rect x="1091.1" y="757" width="7.0" height="15.0" fill="rgb(209,33,41)" rx="2" ry="2" />
<text  x="1094.08" y="767.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (10 samples, 2.99%)</title><rect x="179.6" y="725" width="35.3" height="15.0" fill="rgb(251,1,22)" rx="2" ry="2" />
<text  x="182.58" y="735.5" >[l..</text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.30%)</title><rect x="702.5" y="853" width="3.5" height="15.0" fill="rgb(235,24,51)" rx="2" ry="2" />
<text  x="705.46" y="863.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (12 samples, 3.59%)</title><rect x="504.6" y="677" width="42.4" height="15.0" fill="rgb(248,46,32)" rx="2" ry="2" />
<text  x="507.61" y="687.5" >std..</text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.60%)</title><rect x="222.0" y="805" width="7.0" height="15.0" fill="rgb(225,72,21)" rx="2" ry="2" />
<text  x="224.98" y="815.5" ></text>
</g>
<g >
<title>__sys_sendmsg (2 samples, 0.60%)</title><rect x="1182.9" y="581" width="7.1" height="15.0" fill="rgb(228,197,34)" rx="2" ry="2" />
<text  x="1185.93" y="591.5" ></text>
</g>
<g >
<title>__skb_recv_udp (1 samples, 0.30%)</title><rect x="1119.3" y="725" width="3.6" height="15.0" fill="rgb(248,49,49)" rx="2" ry="2" />
<text  x="1122.34" y="735.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (23 samples, 6.89%)</title><rect x="10.0" y="805" width="81.3" height="15.0" fill="rgb(248,3,32)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >[libddsc...</text>
</g>
<g >
<title>[[heap]] (5 samples, 1.50%)</title><rect x="154.9" y="869" width="17.6" height="15.0" fill="rgb(229,112,5)" rx="2" ry="2" />
<text  x="157.85" y="879.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.30%)</title><rect x="458.7" y="741" width="3.5" height="15.0" fill="rgb(231,146,33)" rx="2" ry="2" />
<text  x="461.68" y="751.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (2 samples, 0.60%)</title><rect x="1182.9" y="693" width="7.1" height="15.0" fill="rgb(245,110,29)" rx="2" ry="2" />
<text  x="1185.93" y="703.5" ></text>
</g>
<g >
<title>rcutils_logging_logger_is_enabled_for (5 samples, 1.50%)</title><rect x="214.9" y="837" width="17.7" height="15.0" fill="rgb(210,2,47)" rx="2" ry="2" />
<text  x="217.91" y="847.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (3 samples, 0.90%)</title><rect x="416.3" y="789" width="10.6" height="15.0" fill="rgb(222,192,7)" rx="2" ry="2" />
<text  x="419.29" y="799.5" ></text>
</g>
<g >
<title>schedule (42 samples, 12.57%)</title><rect x="264.4" y="629" width="148.4" height="15.0" fill="rgb(223,175,43)" rx="2" ry="2" />
<text  x="267.37" y="639.5" >schedule</text>
</g>
<g >
<title>_int_malloc (1 samples, 0.30%)</title><rect x="755.4" y="629" width="3.6" height="15.0" fill="rgb(246,123,9)" rx="2" ry="2" />
<text  x="758.45" y="639.5" ></text>
</g>
<g >
<title>recv (9 samples, 2.69%)</title><rect x="631.8" y="885" width="31.8" height="15.0" fill="rgb(250,128,52)" rx="2" ry="2" />
<text  x="634.80" y="895.5" >recv</text>
</g>
<g >
<title>____sys_recvmsg (63 samples, 18.86%)</title><rect x="843.8" y="629" width="222.5" height="15.0" fill="rgb(243,142,1)" rx="2" ry="2" />
<text  x="846.77" y="639.5" >____sys_recvmsg</text>
</g>
<g >
<title>perf_pmu_enable.part.0 (6 samples, 1.80%)</title><rect x="98.3" y="565" width="21.2" height="15.0" fill="rgb(212,176,3)" rx="2" ry="2" />
<text  x="101.32" y="575.5" ></text>
</g>
<g >
<title>ddsrt_sendmsg (2 samples, 0.60%)</title><rect x="1122.9" y="741" width="7.0" height="15.0" fill="rgb(238,5,6)" rx="2" ry="2" />
<text  x="1125.87" y="751.5" ></text>
</g>
<g >
<title>start_thread (9 samples, 2.69%)</title><rect x="631.8" y="853" width="31.8" height="15.0" fill="rgb(220,32,10)" rx="2" ry="2" />
<text  x="634.80" y="863.5" >st..</text>
</g>
<g >
<title>deactivate_task (2 samples, 0.60%)</title><rect x="886.2" y="485" width="7.0" height="15.0" fill="rgb(207,156,2)" rx="2" ry="2" />
<text  x="889.17" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void  (12 samples, 3.59%)</title><rect x="504.6" y="693" width="42.4" height="15.0" fill="rgb(221,157,10)" rx="2" ry="2" />
<text  x="507.61" y="703.5" >std..</text>
</g>
<g >
<title>do_futex (42 samples, 12.57%)</title><rect x="264.4" y="677" width="148.4" height="15.0" fill="rgb(205,188,26)" rx="2" ry="2" />
<text  x="267.37" y="687.5" >do_futex</text>
</g>
<g >
<title>[libddsc.so.0.7.0] (3 samples, 0.90%)</title><rect x="1122.9" y="773" width="10.6" height="15.0" fill="rgb(223,136,13)" rx="2" ry="2" />
<text  x="1125.87" y="783.5" ></text>
</g>
<g >
<title>udp_sendmsg (2 samples, 0.60%)</title><rect x="1182.9" y="501" width="7.1" height="15.0" fill="rgb(225,46,10)" rx="2" ry="2" />
<text  x="1185.93" y="511.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.30%)</title><rect x="17.1" y="725" width="3.5" height="15.0" fill="rgb(250,183,33)" rx="2" ry="2" />
<text  x="20.07" y="735.5" ></text>
</g>
<g >
<title>rclcpp::Executor::get_next_executable (15 samples, 4.49%)</title><rect x="568.2" y="773" width="53.0" height="15.0" fill="rgb(238,190,45)" rx="2" ry="2" />
<text  x="571.20" y="783.5" >rclcp..</text>
</g>
<g >
<title>group_sched_in (5 samples, 1.50%)</title><rect x="289.1" y="501" width="17.7" height="15.0" fill="rgb(242,224,42)" rx="2" ry="2" />
<text  x="292.10" y="511.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.30%)</title><rect x="628.3" y="725" width="3.5" height="15.0" fill="rgb(242,166,14)" rx="2" ry="2" />
<text  x="631.26" y="735.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="1112.3" y="757" width="3.5" height="15.0" fill="rgb(242,64,52)" rx="2" ry="2" />
<text  x="1115.28" y="767.5" ></text>
</g>
<g >
<title>[librclcpp.so] (15 samples, 4.49%)</title><rect x="501.1" y="741" width="53.0" height="15.0" fill="rgb(250,105,10)" rx="2" ry="2" />
<text  x="504.08" y="751.5" >[libr..</text>
</g>
<g >
<title>ddsi_plist_fini (1 samples, 0.30%)</title><rect x="734.3" y="725" width="3.5" height="15.0" fill="rgb(233,169,45)" rx="2" ry="2" />
<text  x="737.25" y="735.5" ></text>
</g>
<g >
<title>recvUC (130 samples, 38.92%)</title><rect x="663.6" y="885" width="459.3" height="15.0" fill="rgb(206,138,3)" rx="2" ry="2" />
<text  x="666.59" y="895.5" >recvUC</text>
</g>
<g >
<title>rcutils_find_lastn (1 samples, 0.30%)</title><rect x="229.0" y="805" width="3.6" height="15.0" fill="rgb(240,148,10)" rx="2" ry="2" />
<text  x="232.04" y="815.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="1115.8" y="837" width="3.5" height="15.0" fill="rgb(224,191,31)" rx="2" ry="2" />
<text  x="1118.81" y="847.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt; &gt;,  (1 samples, 0.30%)</title><rect x="564.7" y="741" width="3.5" height="15.0" fill="rgb(243,185,9)" rx="2" ry="2" />
<text  x="567.67" y="751.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.30%)</title><rect x="1186.5" y="325" width="3.5" height="15.0" fill="rgb(247,160,51)" rx="2" ry="2" />
<text  x="1189.47" y="335.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (19 samples, 5.69%)</title><rect x="24.1" y="645" width="67.2" height="15.0" fill="rgb(239,182,27)" rx="2" ry="2" />
<text  x="27.13" y="655.5" >futex_w..</text>
</g>
<g >
<title>rcl_wait_set_resize (2 samples, 0.60%)</title><rect x="571.7" y="741" width="7.1" height="15.0" fill="rgb(251,209,47)" rx="2" ry="2" />
<text  x="574.74" y="751.5" ></text>
</g>
<g >
<title>ddsrt_avl_walk (2 samples, 0.60%)</title><rect x="1182.9" y="725" width="7.1" height="15.0" fill="rgb(228,47,33)" rx="2" ry="2" />
<text  x="1185.93" y="735.5" ></text>
</g>
<g >
<title>lease_renew (2 samples, 0.60%)</title><rect x="1076.9" y="757" width="7.1" height="15.0" fill="rgb(251,176,14)" rx="2" ry="2" />
<text  x="1079.95" y="767.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.30%)</title><rect x="419.8" y="693" width="3.6" height="15.0" fill="rgb(225,177,37)" rx="2" ry="2" />
<text  x="422.82" y="703.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.30%)</title><rect x="857.9" y="581" width="3.5" height="15.0" fill="rgb(212,89,22)" rx="2" ry="2" />
<text  x="860.90" y="591.5" ></text>
</g>
<g >
<title>__consume_stateless_skb (2 samples, 0.60%)</title><rect x="1059.3" y="549" width="7.0" height="15.0" fill="rgb(247,28,25)" rx="2" ry="2" />
<text  x="1062.28" y="559.5" ></text>
</g>
<g >
<title>std::static_pointer_cast&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;, void&gt; (1 samples, 0.30%)</title><rect x="550.5" y="709" width="3.6" height="15.0" fill="rgb(219,229,2)" rx="2" ry="2" />
<text  x="553.54" y="719.5" ></text>
</g>
<g >
<title>_start (43 samples, 12.87%)</title><rect x="476.3" y="869" width="152.0" height="15.0" fill="rgb(234,169,6)" rx="2" ry="2" />
<text  x="479.35" y="879.5" >_start</text>
</g>
<g >
<title>finish_task_switch (14 samples, 4.19%)</title><rect x="1133.5" y="597" width="49.4" height="15.0" fill="rgb(211,164,21)" rx="2" ry="2" />
<text  x="1136.47" y="607.5" >fini..</text>
</g>
<g >
<title>__cgroup_bpf_run_filter_sock_addr (1 samples, 0.30%)</title><rect x="861.4" y="565" width="3.6" height="15.0" fill="rgb(249,110,11)" rx="2" ry="2" />
<text  x="864.44" y="575.5" ></text>
</g>
<g >
<title>[librclcpp.so] (1 samples, 0.30%)</title><rect x="621.2" y="741" width="3.5" height="15.0" fill="rgb(227,154,34)" rx="2" ry="2" />
<text  x="624.20" y="751.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="183.1" y="709" width="3.5" height="15.0" fill="rgb(250,100,6)" rx="2" ry="2" />
<text  x="186.11" y="719.5" ></text>
</g>
<g >
<title>x86_pmu_enable (12 samples, 3.59%)</title><rect x="1137.0" y="549" width="42.4" height="15.0" fill="rgb(236,50,33)" rx="2" ry="2" />
<text  x="1140.01" y="559.5" >x86..</text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (3 samples, 0.90%)</title><rect x="200.8" y="661" width="10.6" height="15.0" fill="rgb(245,145,1)" rx="2" ry="2" />
<text  x="203.78" y="671.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.30%)</title><rect x="1115.8" y="805" width="3.5" height="15.0" fill="rgb(242,147,20)" rx="2" ry="2" />
<text  x="1118.81" y="815.5" ></text>
</g>
<g >
<title>__x64_sys_futex (42 samples, 12.57%)</title><rect x="264.4" y="693" width="148.4" height="15.0" fill="rgb(253,198,26)" rx="2" ry="2" />
<text  x="267.37" y="703.5" >__x64_sys_futex</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.30%)</title><rect x="409.2" y="565" width="3.6" height="15.0" fill="rgb(224,102,23)" rx="2" ry="2" />
<text  x="412.22" y="575.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (10 samples, 2.99%)</title><rect x="179.6" y="757" width="35.3" height="15.0" fill="rgb(234,22,17)" rx="2" ry="2" />
<text  x="182.58" y="767.5" >[l..</text>
</g>
<g >
<title>resched_curr (1 samples, 0.30%)</title><rect x="797.8" y="453" width="3.6" height="15.0" fill="rgb(232,124,53)" rx="2" ry="2" />
<text  x="800.84" y="463.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.30%)</title><rect x="1186.5" y="373" width="3.5" height="15.0" fill="rgb(233,196,37)" rx="2" ry="2" />
<text  x="1189.47" y="383.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.30%)</title><rect x="854.4" y="597" width="3.5" height="15.0" fill="rgb(226,65,25)" rx="2" ry="2" />
<text  x="857.37" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.60%)</title><rect x="1122.9" y="693" width="7.0" height="15.0" fill="rgb(246,152,48)" rx="2" ry="2" />
<text  x="1125.87" y="703.5" ></text>
</g>
<g >
<title>rclcpp::AnySubscriptionCallback&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::dispatch (13 samples, 3.89%)</title><rect x="504.6" y="709" width="45.9" height="15.0" fill="rgb(226,157,20)" rx="2" ry="2" />
<text  x="507.61" y="719.5" >rclc..</text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="497.5" y="693" width="3.6" height="15.0" fill="rgb(245,184,53)" rx="2" ry="2" />
<text  x="500.54" y="703.5" ></text>
</g>
<g >
<title>__GI___clone (19 samples, 5.69%)</title><rect x="1122.9" y="869" width="67.1" height="15.0" fill="rgb(236,198,9)" rx="2" ry="2" />
<text  x="1125.87" y="879.5" >__GI___..</text>
</g>
<g >
<title>__pthread_cond_wait_common (14 samples, 4.19%)</title><rect x="1133.5" y="757" width="49.4" height="15.0" fill="rgb(247,150,19)" rx="2" ry="2" />
<text  x="1136.47" y="767.5" >__pt..</text>
</g>
<g >
<title>__libc_recvmsg (68 samples, 20.36%)</title><rect x="836.7" y="725" width="240.2" height="15.0" fill="rgb(235,223,44)" rx="2" ry="2" />
<text  x="839.71" y="735.5" >__libc_recvmsg</text>
</g>
<g >
<title>rclcpp::Executor::execute_any_executable (24 samples, 7.19%)</title><rect x="483.4" y="773" width="84.8" height="15.0" fill="rgb(207,151,51)" rx="2" ry="2" />
<text  x="486.41" y="783.5" >rclcpp::E..</text>
</g>
<g >
<title>wake_up_q (7 samples, 2.10%)</title><rect x="780.2" y="533" width="24.7" height="15.0" fill="rgb(246,127,42)" rx="2" ry="2" />
<text  x="783.18" y="543.5" >w..</text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;,  (1 samples, 0.30%)</title><rect x="176.0" y="853" width="3.6" height="15.0" fill="rgb(205,25,18)" rx="2" ry="2" />
<text  x="179.05" y="863.5" ></text>
</g>
<g >
<title>__GI___clone (8 samples, 2.40%)</title><rect x="91.3" y="869" width="28.2" height="15.0" fill="rgb(237,46,38)" rx="2" ry="2" />
<text  x="94.26" y="879.5" >_..</text>
</g>
<g >
<title>__sched_text_start (14 samples, 4.19%)</title><rect x="1133.5" y="613" width="49.4" height="15.0" fill="rgb(236,218,4)" rx="2" ry="2" />
<text  x="1136.47" y="623.5" >__sc..</text>
</g>
<g >
<title>[librclcpp.so] (1 samples, 0.30%)</title><rect x="575.3" y="709" width="3.5" height="15.0" fill="rgb(247,79,48)" rx="2" ry="2" />
<text  x="578.27" y="719.5" ></text>
</g>
<g >
<title>MinimalSubscriber::topic_callback (11 samples, 3.29%)</title><rect x="508.1" y="597" width="38.9" height="15.0" fill="rgb(234,153,51)" rx="2" ry="2" />
<text  x="511.14" y="607.5" >Min..</text>
</g>
<g >
<title>dds_entity_status_signal (14 samples, 4.19%)</title><rect x="762.5" y="693" width="49.5" height="15.0" fill="rgb(222,95,3)" rx="2" ry="2" />
<text  x="765.51" y="703.5" >dds_..</text>
</g>
<g >
<title>ctx_sched_in (5 samples, 1.50%)</title><rect x="289.1" y="549" width="17.7" height="15.0" fill="rgb(207,216,15)" rx="2" ry="2" />
<text  x="292.10" y="559.5" ></text>
</g>
<g >
<title>ddsrt_mutex_unlock (1 samples, 0.30%)</title><rect x="455.1" y="789" width="3.6" height="15.0" fill="rgb(220,81,41)" rx="2" ry="2" />
<text  x="458.15" y="799.5" ></text>
</g>
<g >
<title>ddsrt_avl_walk (1 samples, 0.30%)</title><rect x="829.6" y="757" width="3.6" height="15.0" fill="rgb(222,73,49)" rx="2" ry="2" />
<text  x="832.64" y="767.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (10 samples, 2.99%)</title><rect x="179.6" y="741" width="35.3" height="15.0" fill="rgb(235,143,46)" rx="2" ry="2" />
<text  x="182.58" y="751.5" >[l..</text>
</g>
<g >
<title>perf_event_update_userpage (2 samples, 0.60%)</title><rect x="292.6" y="453" width="7.1" height="15.0" fill="rgb(227,138,21)" rx="2" ry="2" />
<text  x="295.63" y="463.5" ></text>
</g>
<g >
<title>sock_sendmsg (2 samples, 0.60%)</title><rect x="1182.9" y="533" width="7.1" height="15.0" fill="rgb(232,88,18)" rx="2" ry="2" />
<text  x="1185.93" y="543.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.30%)</title><rect x="455.1" y="757" width="3.6" height="15.0" fill="rgb(216,47,46)" rx="2" ry="2" />
<text  x="458.15" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="628.3" y="853" width="3.5" height="15.0" fill="rgb(221,24,43)" rx="2" ry="2" />
<text  x="631.26" y="863.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (29 samples, 8.68%)</title><rect x="306.8" y="565" width="102.4" height="15.0" fill="rgb(242,85,39)" rx="2" ry="2" />
<text  x="309.77" y="575.5" >perf_pmu_ena..</text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (2 samples, 0.60%)</title><rect x="751.9" y="677" width="7.1" height="15.0" fill="rgb(217,180,38)" rx="2" ry="2" />
<text  x="754.92" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.60%)</title><rect x="1122.9" y="677" width="7.0" height="15.0" fill="rgb(208,172,23)" rx="2" ry="2" />
<text  x="1125.87" y="687.5" ></text>
</g>
<g >
<title>visit_groups_merge (1 samples, 0.30%)</title><rect x="94.8" y="533" width="3.5" height="15.0" fill="rgb(254,128,15)" rx="2" ry="2" />
<text  x="97.79" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_sendmsg (2 samples, 0.60%)</title><rect x="1182.9" y="597" width="7.1" height="15.0" fill="rgb(222,191,19)" rx="2" ry="2" />
<text  x="1185.93" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;,  (1 samples, 0.30%)</title><rect x="550.5" y="677" width="3.6" height="15.0" fill="rgb(254,22,44)" rx="2" ry="2" />
<text  x="553.54" y="687.5" ></text>
</g>
<g >
<title>__sched_text_start (45 samples, 13.47%)</title><rect x="882.6" y="501" width="159.0" height="15.0" fill="rgb(218,10,11)" rx="2" ry="2" />
<text  x="885.63" y="511.5" >__sched_text_start</text>
</g>
<g >
<title>rcl_wait (74 samples, 22.16%)</title><rect x="214.9" y="853" width="261.4" height="15.0" fill="rgb(252,110,12)" rx="2" ry="2" />
<text  x="217.91" y="863.5" >rcl_wait</text>
</g>
<g >
<title>std::__shared_ptr&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;,  (1 samples, 0.30%)</title><rect x="539.9" y="549" width="3.6" height="15.0" fill="rgb(253,10,51)" rx="2" ry="2" />
<text  x="542.94" y="559.5" ></text>
</g>
<g >
<title>ctx_sched_in (1 samples, 0.30%)</title><rect x="1133.5" y="549" width="3.5" height="15.0" fill="rgb(243,110,25)" rx="2" ry="2" />
<text  x="1136.47" y="559.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_service (2 samples, 0.60%)</title><rect x="582.3" y="725" width="7.1" height="15.0" fill="rgb(209,112,8)" rx="2" ry="2" />
<text  x="585.34" y="735.5" ></text>
</g>
<g >
<title>rclcpp::Executor::get_next_ready_executable (1 samples, 0.30%)</title><rect x="568.2" y="757" width="3.5" height="15.0" fill="rgb(221,113,7)" rx="2" ry="2" />
<text  x="571.20" y="767.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.30%)</title><rect x="1119.3" y="677" width="3.6" height="15.0" fill="rgb(254,141,9)" rx="2" ry="2" />
<text  x="1122.34" y="687.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.30%)</title><rect x="1186.5" y="341" width="3.5" height="15.0" fill="rgb(205,86,23)" rx="2" ry="2" />
<text  x="1189.47" y="351.5" ></text>
</g>
<g >
<title>____sys_sendmsg (1 samples, 0.30%)</title><rect x="1122.9" y="613" width="3.5" height="15.0" fill="rgb(251,15,16)" rx="2" ry="2" />
<text  x="1125.87" y="623.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt; &gt;::shared_ptr (1 samples, 0.30%)</title><rect x="547.0" y="693" width="3.5" height="15.0" fill="rgb(225,129,12)" rx="2" ry="2" />
<text  x="550.01" y="703.5" ></text>
</g>
<g >
<title>ddsrt_mutex_lock (1 samples, 0.30%)</title><rect x="458.7" y="757" width="3.5" height="15.0" fill="rgb(215,136,46)" rx="2" ry="2" />
<text  x="461.68" y="767.5" ></text>
</g>
<g >
<title>std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;::Int32MultiArray_ (1 samples, 0.30%)</title><rect x="561.1" y="597" width="3.6" height="15.0" fill="rgb(228,226,23)" rx="2" ry="2" />
<text  x="564.14" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;,  (1 samples, 0.30%)</title><rect x="547.0" y="677" width="3.5" height="15.0" fill="rgb(235,15,36)" rx="2" ry="2" />
<text  x="550.01" y="687.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (8 samples, 2.40%)</title><rect x="91.3" y="773" width="28.2" height="15.0" fill="rgb(244,16,12)" rx="2" ry="2" />
<text  x="94.26" y="783.5" >_..</text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::number_of_ready_subscriptions (2 samples, 0.60%)</title><rect x="600.0" y="741" width="7.1" height="15.0" fill="rgb(241,132,30)" rx="2" ry="2" />
<text  x="603.00" y="751.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (12 samples, 3.59%)</title><rect x="1137.0" y="565" width="42.4" height="15.0" fill="rgb(251,191,52)" rx="2" ry="2" />
<text  x="1140.01" y="575.5" >per..</text>
</g>
<g >
<title>futex_wait (19 samples, 5.69%)</title><rect x="24.1" y="661" width="67.2" height="15.0" fill="rgb(231,89,49)" rx="2" ry="2" />
<text  x="27.13" y="671.5" >futex_w..</text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.30%)</title><rect x="628.3" y="757" width="3.5" height="15.0" fill="rgb(230,66,43)" rx="2" ry="2" />
<text  x="631.26" y="767.5" ></text>
</g>
<g >
<title>___sys_sendmsg (1 samples, 0.30%)</title><rect x="1122.9" y="629" width="3.5" height="15.0" fill="rgb(214,106,52)" rx="2" ry="2" />
<text  x="1125.87" y="639.5" ></text>
</g>
<g >
<title>native_write_msr (17 samples, 5.09%)</title><rect x="31.2" y="517" width="60.1" height="15.0" fill="rgb(233,225,22)" rx="2" ry="2" />
<text  x="34.20" y="527.5" >native..</text>
</g>
<g >
<title>ddsrt_mutex_lock (1 samples, 0.30%)</title><rect x="451.6" y="789" width="3.5" height="15.0" fill="rgb(238,33,31)" rx="2" ry="2" />
<text  x="454.62" y="799.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.30%)</title><rect x="451.6" y="773" width="3.5" height="15.0" fill="rgb(216,73,54)" rx="2" ry="2" />
<text  x="454.62" y="783.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (2 samples, 0.60%)</title><rect x="444.6" y="741" width="7.0" height="15.0" fill="rgb(212,40,20)" rx="2" ry="2" />
<text  x="447.55" y="751.5" ></text>
</g>
<g >
<title>ddsrt_mutex_trylock (1 samples, 0.30%)</title><rect x="1129.9" y="709" width="3.6" height="15.0" fill="rgb(238,118,10)" rx="2" ry="2" />
<text  x="1132.94" y="719.5" ></text>
</g>
<g >
<title>inet_recvmsg (1 samples, 0.30%)</title><rect x="1119.3" y="757" width="3.6" height="15.0" fill="rgb(209,189,35)" rx="2" ry="2" />
<text  x="1122.34" y="767.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt; &gt;, true&gt;::~_Sp_ebo_helper (1 samples, 0.30%)</title><rect x="564.7" y="693" width="3.5" height="15.0" fill="rgb(229,221,51)" rx="2" ry="2" />
<text  x="567.67" y="703.5" ></text>
</g>
<g >
<title>dds_entity_lock (1 samples, 0.30%)</title><rect x="494.0" y="709" width="3.5" height="15.0" fill="rgb(236,164,51)" rx="2" ry="2" />
<text  x="497.01" y="719.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (27 samples, 8.08%)</title><rect x="730.7" y="757" width="95.4" height="15.0" fill="rgb(221,197,13)" rx="2" ry="2" />
<text  x="733.72" y="767.5" >[libddsc.so..</text>
</g>
<g >
<title>dds_entity_pin (2 samples, 0.60%)</title><rect x="444.6" y="789" width="7.0" height="15.0" fill="rgb(207,221,42)" rx="2" ry="2" />
<text  x="447.55" y="799.5" ></text>
</g>
<g >
<title>perf_event_sched_in (6 samples, 1.80%)</title><rect x="907.4" y="453" width="21.2" height="15.0" fill="rgb(232,82,33)" rx="2" ry="2" />
<text  x="910.37" y="463.5" ></text>
</g>
<g >
<title>rclcpp::Subscription&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt;, rclcpp::message_memory_strategy::MessageMemoryStrategy&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;::create_message (1 samples, 0.30%)</title><rect x="561.1" y="741" width="3.6" height="15.0" fill="rgb(205,107,20)" rx="2" ry="2" />
<text  x="564.14" y="751.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (14 samples, 4.19%)</title><rect x="1133.5" y="773" width="49.4" height="15.0" fill="rgb(226,2,16)" rx="2" ry="2" />
<text  x="1136.47" y="783.5" >__pt..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19 samples, 5.69%)</title><rect x="24.1" y="725" width="67.2" height="15.0" fill="rgb(228,165,19)" rx="2" ry="2" />
<text  x="27.13" y="735.5" >entry_S..</text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.30%)</title><rect x="547.0" y="645" width="3.5" height="15.0" fill="rgb(215,48,39)" rx="2" ry="2" />
<text  x="550.01" y="655.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.30%)</title><rect x="13.5" y="757" width="3.6" height="15.0" fill="rgb(229,125,37)" rx="2" ry="2" />
<text  x="16.53" y="767.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (6 samples, 1.80%)</title><rect x="98.3" y="533" width="21.2" height="15.0" fill="rgb(217,58,33)" rx="2" ry="2" />
<text  x="101.32" y="543.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="812.0" y="677" width="3.5" height="15.0" fill="rgb(244,134,19)" rx="2" ry="2" />
<text  x="814.98" y="687.5" ></text>
</g>
<g >
<title>rmw_wait (69 samples, 20.66%)</title><rect x="232.6" y="837" width="243.7" height="15.0" fill="rgb(233,97,36)" rx="2" ry="2" />
<text  x="235.57" y="847.5" >rmw_wait</text>
</g>
<g >
<title>builtins_dqueue_handler (3 samples, 0.90%)</title><rect x="10.0" y="789" width="10.6" height="15.0" fill="rgb(242,100,6)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (2 samples, 0.60%)</title><rect x="1182.9" y="709" width="7.1" height="15.0" fill="rgb(235,148,4)" rx="2" ry="2" />
<text  x="1185.93" y="719.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.30%)</title><rect x="1186.5" y="309" width="3.5" height="15.0" fill="rgb(230,104,30)" rx="2" ry="2" />
<text  x="1189.47" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 4.19%)</title><rect x="1133.5" y="725" width="49.4" height="15.0" fill="rgb(229,150,24)" rx="2" ry="2" />
<text  x="1136.47" y="735.5" >entr..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.30%)</title><rect x="409.2" y="581" width="3.6" height="15.0" fill="rgb(239,100,52)" rx="2" ry="2" />
<text  x="412.22" y="591.5" ></text>
</g>
<g >
<title>perf_event_sched_in (5 samples, 1.50%)</title><rect x="289.1" y="565" width="17.7" height="15.0" fill="rgb(231,111,49)" rx="2" ry="2" />
<text  x="292.10" y="575.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="441.0" y="789" width="3.6" height="15.0" fill="rgb(252,26,52)" rx="2" ry="2" />
<text  x="444.02" y="799.5" ></text>
</g>
<g >
<title>__condvar_dec_grefs (1 samples, 0.30%)</title><rect x="20.6" y="741" width="3.5" height="15.0" fill="rgb(254,206,31)" rx="2" ry="2" />
<text  x="23.60" y="751.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (3 samples, 0.90%)</title><rect x="751.9" y="693" width="10.6" height="15.0" fill="rgb(211,170,24)" rx="2" ry="2" />
<text  x="754.92" y="703.5" ></text>
</g>
<g >
<title>udp_recvmsg (1 samples, 0.30%)</title><rect x="1119.3" y="741" width="3.6" height="15.0" fill="rgb(218,65,35)" rx="2" ry="2" />
<text  x="1122.34" y="751.5" ></text>
</g>
<g >
<title>ip_make_skb (1 samples, 0.30%)</title><rect x="1122.9" y="549" width="3.5" height="15.0" fill="rgb(245,48,36)" rx="2" ry="2" />
<text  x="1125.87" y="559.5" ></text>
</g>
<g >
<title>dq.builtins (23 samples, 6.89%)</title><rect x="10.0" y="885" width="81.3" height="15.0" fill="rgb(214,104,3)" rx="2" ry="2" />
<text  x="13.00" y="895.5" >dq.builtins</text>
</g>
<g >
<title>ctx_sched_in (2 samples, 0.60%)</title><rect x="24.1" y="549" width="7.1" height="15.0" fill="rgb(211,74,2)" rx="2" ry="2" />
<text  x="27.13" y="559.5" ></text>
</g>
<g >
<title>dds_entity_lock (2 samples, 0.60%)</title><rect x="458.7" y="805" width="7.0" height="15.0" fill="rgb(242,78,5)" rx="2" ry="2" />
<text  x="461.68" y="815.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.30%)</title><rect x="628.3" y="677" width="3.5" height="15.0" fill="rgb(239,52,45)" rx="2" ry="2" />
<text  x="631.26" y="687.5" ></text>
</g>
<g >
<title>rclcpp::allocator::retyped_reallocate&lt;void*, std::allocator&lt;void*&gt; &gt; (2 samples, 0.60%)</title><rect x="571.7" y="725" width="7.1" height="15.0" fill="rgb(229,2,1)" rx="2" ry="2" />
<text  x="574.74" y="735.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::number_of_ready_timers (1 samples, 0.30%)</title><rect x="607.1" y="741" width="3.5" height="15.0" fill="rgb(211,188,40)" rx="2" ry="2" />
<text  x="610.07" y="751.5" ></text>
</g>
<g >
<title>x86_pmu_enable (31 samples, 9.28%)</title><rect x="928.6" y="437" width="109.5" height="15.0" fill="rgb(223,125,29)" rx="2" ry="2" />
<text  x="931.56" y="447.5" >x86_pmu_enable</text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (10 samples, 2.99%)</title><rect x="179.6" y="805" width="35.3" height="15.0" fill="rgb(236,167,0)" rx="2" ry="2" />
<text  x="182.58" y="815.5" >[l..</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (7 samples, 2.10%)</title><rect x="638.9" y="613" width="24.7" height="15.0" fill="rgb(242,87,37)" rx="2" ry="2" />
<text  x="641.86" y="623.5" >s..</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.30%)</title><rect x="1186.5" y="197" width="3.5" height="15.0" fill="rgb(247,46,28)" rx="2" ry="2" />
<text  x="1189.47" y="207.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.30%)</title><rect x="1186.5" y="229" width="3.5" height="15.0" fill="rgb(251,16,34)" rx="2" ry="2" />
<text  x="1189.47" y="239.5" ></text>
</g>
<g >
<title>__sched_text_start (19 samples, 5.69%)</title><rect x="24.1" y="613" width="67.2" height="15.0" fill="rgb(247,83,14)" rx="2" ry="2" />
<text  x="27.13" y="623.5" >__sched..</text>
</g>
<g >
<title>__ip_finish_output (1 samples, 0.30%)</title><rect x="1186.5" y="405" width="3.5" height="15.0" fill="rgb(234,104,19)" rx="2" ry="2" />
<text  x="1189.47" y="415.5" ></text>
</g>
<g >
<title>perf_event_sched_in (2 samples, 0.60%)</title><rect x="24.1" y="565" width="7.1" height="15.0" fill="rgb(251,191,39)" rx="2" ry="2" />
<text  x="27.13" y="575.5" ></text>
</g>
<g >
<title>try_to_wake_up (7 samples, 2.10%)</title><rect x="780.2" y="517" width="24.7" height="15.0" fill="rgb(240,40,47)" rx="2" ry="2" />
<text  x="783.18" y="527.5" >t..</text>
</g>
<g >
<title>do_futex (8 samples, 2.40%)</title><rect x="91.3" y="677" width="28.2" height="15.0" fill="rgb(253,39,15)" rx="2" ry="2" />
<text  x="94.26" y="687.5" >d..</text>
</g>
<g >
<title>ttwu_do_activate (4 samples, 1.20%)</title><rect x="787.2" y="501" width="14.2" height="15.0" fill="rgb(210,149,51)" rx="2" ry="2" />
<text  x="790.25" y="511.5" ></text>
</g>
<g >
<title>__GI___clone (23 samples, 6.89%)</title><rect x="10.0" y="869" width="81.3" height="15.0" fill="rgb(213,118,9)" rx="2" ry="2" />
<text  x="13.00" y="879.5" >__GI___cl..</text>
</g>
<g >
<title>psi_task_change (1 samples, 0.30%)</title><rect x="794.3" y="469" width="3.5" height="15.0" fill="rgb(253,19,46)" rx="2" ry="2" />
<text  x="797.31" y="479.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (1 samples, 0.30%)</title><rect x="1038.1" y="469" width="3.5" height="15.0" fill="rgb(254,22,28)" rx="2" ry="2" />
<text  x="1041.08" y="479.5" ></text>
</g>
<g >
<title>xfrm_lookup_with_ifid (1 samples, 0.30%)</title><rect x="1182.9" y="469" width="3.6" height="15.0" fill="rgb(234,185,50)" rx="2" ry="2" />
<text  x="1185.93" y="479.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (43 samples, 12.87%)</title><rect x="264.4" y="757" width="151.9" height="15.0" fill="rgb(223,60,19)" rx="2" ry="2" />
<text  x="267.37" y="767.5" >__pthread_cond_wait..</text>
</g>
<g >
<title>schedule (46 samples, 13.77%)</title><rect x="882.6" y="517" width="162.5" height="15.0" fill="rgb(209,187,41)" rx="2" ry="2" />
<text  x="885.63" y="527.5" >schedule</text>
</g>
<g >
<title>[librclcpp.so] (2 samples, 0.60%)</title><rect x="614.1" y="725" width="7.1" height="15.0" fill="rgb(246,26,29)" rx="2" ry="2" />
<text  x="617.13" y="735.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.30%)</title><rect x="628.3" y="821" width="3.5" height="15.0" fill="rgb(219,14,50)" rx="2" ry="2" />
<text  x="631.26" y="831.5" ></text>
</g>
<g >
<title>ksoftirqd_running (1 samples, 0.30%)</title><rect x="409.2" y="549" width="3.6" height="15.0" fill="rgb(253,47,36)" rx="2" ry="2" />
<text  x="412.22" y="559.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (11 samples, 3.29%)</title><rect x="508.1" y="613" width="38.9" height="15.0" fill="rgb(247,133,21)" rx="2" ry="2" />
<text  x="511.14" y="623.5" >std..</text>
</g>
<g >
<title>schedule (8 samples, 2.40%)</title><rect x="91.3" y="629" width="28.2" height="15.0" fill="rgb(205,37,49)" rx="2" ry="2" />
<text  x="94.26" y="639.5" >s..</text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::get_next_subscription (2 samples, 0.60%)</title><rect x="621.2" y="757" width="7.1" height="15.0" fill="rgb(212,203,48)" rx="2" ry="2" />
<text  x="624.20" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.60%)</title><rect x="1115.8" y="853" width="7.1" height="15.0" fill="rgb(239,6,24)" rx="2" ry="2" />
<text  x="1118.81" y="863.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.30%)</title><rect x="207.8" y="645" width="3.6" height="15.0" fill="rgb(248,149,9)" rx="2" ry="2" />
<text  x="210.84" y="655.5" ></text>
</g>
<g >
<title>nn_defrag_notegap (1 samples, 0.30%)</title><rect x="1084.0" y="757" width="3.5" height="15.0" fill="rgb(250,33,8)" rx="2" ry="2" />
<text  x="1087.01" y="767.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.30%)</title><rect x="660.1" y="549" width="3.5" height="15.0" fill="rgb(227,31,12)" rx="2" ry="2" />
<text  x="663.06" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (1 samples, 0.30%)</title><rect x="631.8" y="677" width="3.5" height="15.0" fill="rgb(242,138,50)" rx="2" ry="2" />
<text  x="634.80" y="687.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.30%)</title><rect x="561.1" y="661" width="3.6" height="15.0" fill="rgb(234,6,6)" rx="2" ry="2" />
<text  x="564.14" y="671.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 0.30%)</title><rect x="1186.5" y="261" width="3.5" height="15.0" fill="rgb(206,140,18)" rx="2" ry="2" />
<text  x="1189.47" y="271.5" ></text>
</g>
<g >
<title>[librclcpp.so] (10 samples, 2.99%)</title><rect x="179.6" y="853" width="35.3" height="15.0" fill="rgb(250,118,22)" rx="2" ry="2" />
<text  x="182.58" y="863.5" >[l..</text>
</g>
<g >
<title>___sys_recvmsg (65 samples, 19.46%)</title><rect x="840.2" y="645" width="229.7" height="15.0" fill="rgb(244,189,12)" rx="2" ry="2" />
<text  x="843.24" y="655.5" >___sys_recvmsg</text>
</g>
<g >
<title>[libddsc.so.0.7.0] (1 samples, 0.30%)</title><rect x="833.2" y="741" width="3.5" height="15.0" fill="rgb(229,207,38)" rx="2" ry="2" />
<text  x="836.17" y="751.5" ></text>
</g>
<g >
<title>recv_thread (115 samples, 34.43%)</title><rect x="709.5" y="805" width="406.3" height="15.0" fill="rgb(244,65,5)" rx="2" ry="2" />
<text  x="712.52" y="815.5" >recv_thread</text>
</g>
<g >
<title>futex_wait_cancelable (43 samples, 12.87%)</title><rect x="264.4" y="741" width="151.9" height="15.0" fill="rgb(216,219,24)" rx="2" ry="2" />
<text  x="267.37" y="751.5" >futex_wait_cancelable</text>
</g>
<g >
<title>operator new (1 samples, 0.30%)</title><rect x="755.4" y="661" width="3.6" height="15.0" fill="rgb(221,73,22)" rx="2" ry="2" />
<text  x="758.45" y="671.5" ></text>
</g>
<g >
<title>futex_wait (42 samples, 12.57%)</title><rect x="264.4" y="661" width="148.4" height="15.0" fill="rgb(213,101,24)" rx="2" ry="2" />
<text  x="267.37" y="671.5" >futex_wait</text>
</g>
<g >
<title>activate_task (3 samples, 0.90%)</title><rect x="787.2" y="485" width="10.6" height="15.0" fill="rgb(207,125,2)" rx="2" ry="2" />
<text  x="790.25" y="495.5" ></text>
</g>
<g >
<title>futex_wait (8 samples, 2.40%)</title><rect x="91.3" y="661" width="28.2" height="15.0" fill="rgb(209,42,49)" rx="2" ry="2" />
<text  x="94.26" y="671.5" >f..</text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.30%)</title><rect x="1182.9" y="485" width="3.6" height="15.0" fill="rgb(210,165,44)" rx="2" ry="2" />
<text  x="1185.93" y="495.5" ></text>
</g>
<g >
<title>rclcpp::Executor::get_next_ready_executable (2 samples, 0.60%)</title><rect x="621.2" y="773" width="7.1" height="15.0" fill="rgb(219,168,8)" rx="2" ry="2" />
<text  x="624.20" y="783.5" ></text>
</g>
</g>
</svg>
